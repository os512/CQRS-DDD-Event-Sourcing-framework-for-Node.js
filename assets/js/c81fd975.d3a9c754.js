/*! For license information please see c81fd975.d3a9c754.js.LICENSE.txt */
(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[9310],{2525:e=>{"use strict";var t=Object.getOwnPropertySymbols,n=Object.prototype.hasOwnProperty,a=Object.prototype.propertyIsEnumerable;function r(e){if(null==e)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(e)}e.exports=function(){try{if(!Object.assign)return!1;var e=new String("abc");if(e[5]="de","5"===Object.getOwnPropertyNames(e)[0])return!1;for(var t={},n=0;n<10;n++)t["_"+String.fromCharCode(n)]=n;if("0123456789"!==Object.getOwnPropertyNames(t).map((function(e){return t[e]})).join(""))return!1;var a={};return"abcdefghijklmnopqrst".split("").forEach((function(e){a[e]=e})),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},a)).join("")}catch(r){return!1}}()?Object.assign:function(e,o){for(var i,l,s=r(e),d=1;d<arguments.length;d++){for(var c in i=Object(arguments[d]))n.call(i,c)&&(s[c]=i[c]);if(t){l=t(i);for(var p=0;p<l.length;p++)a.call(i,l[p])&&(s[l[p]]=i[l[p]])}}return s}},1535:(e,t,n)=>{"use strict";var a=n(2525),r="function"==typeof Symbol&&Symbol.for,o=r?Symbol.for("react.element"):60103,i=r?Symbol.for("react.portal"):60106,l=r?Symbol.for("react.fragment"):60107,s=r?Symbol.for("react.strict_mode"):60108,d=r?Symbol.for("react.profiler"):60114,c=r?Symbol.for("react.provider"):60109,p=r?Symbol.for("react.context"):60110,u=r?Symbol.for("react.forward_ref"):60112,m=r?Symbol.for("react.suspense"):60113,g=r?Symbol.for("react.memo"):60115,f=r?Symbol.for("react.lazy"):60116,k="function"==typeof Symbol&&Symbol.iterator;function h(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,n=1;n<arguments.length;n++)t+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var y={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},N={};function b(e,t,n){this.props=e,this.context=t,this.refs=N,this.updater=n||y}function v(){}function w(e,t,n){this.props=e,this.context=t,this.refs=N,this.updater=n||y}b.prototype.isReactComponent={},b.prototype.setState=function(e,t){if("object"!=typeof e&&"function"!=typeof e&&null!=e)throw Error(h(85));this.updater.enqueueSetState(this,e,t,"setState")},b.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},v.prototype=b.prototype;var S=w.prototype=new v;S.constructor=w,a(S,b.prototype),S.isPureReactComponent=!0;var C={current:null},j=Object.prototype.hasOwnProperty,O={key:!0,ref:!0,__self:!0,__source:!0};function T(e,t,n){var a,r={},i=null,l=null;if(null!=t)for(a in void 0!==t.ref&&(l=t.ref),void 0!==t.key&&(i=""+t.key),t)j.call(t,a)&&!O.hasOwnProperty(a)&&(r[a]=t[a]);var s=arguments.length-2;if(1===s)r.children=n;else if(1<s){for(var d=Array(s),c=0;c<s;c++)d[c]=arguments[c+2];r.children=d}if(e&&e.defaultProps)for(a in s=e.defaultProps)void 0===r[a]&&(r[a]=s[a]);return{$$typeof:o,type:e,key:i,ref:l,props:r,_owner:C.current}}function E(e){return"object"==typeof e&&null!==e&&e.$$typeof===o}var x=/\/+/g,A=[];function P(e,t,n,a){if(A.length){var r=A.pop();return r.result=e,r.keyPrefix=t,r.func=n,r.context=a,r.count=0,r}return{result:e,keyPrefix:t,func:n,context:a,count:0}}function D(e){e.result=null,e.keyPrefix=null,e.func=null,e.context=null,e.count=0,10>A.length&&A.push(e)}function M(e,t,n,a){var r=typeof e;"undefined"!==r&&"boolean"!==r||(e=null);var l=!1;if(null===e)l=!0;else switch(r){case"string":case"number":l=!0;break;case"object":switch(e.$$typeof){case o:case i:l=!0}}if(l)return n(a,e,""===t?"."+q(e,0):t),1;if(l=0,t=""===t?".":t+":",Array.isArray(e))for(var s=0;s<e.length;s++){var d=t+q(r=e[s],s);l+=M(r,d,n,a)}else if(null===e||"object"!=typeof e?d=null:d="function"==typeof(d=k&&e[k]||e["@@iterator"])?d:null,"function"==typeof d)for(e=d.call(e),s=0;!(r=e.next()).done;)l+=M(r=r.value,d=t+q(r,s++),n,a);else if("object"===r)throw n=""+e,Error(h(31,"[object Object]"===n?"object with keys {"+Object.keys(e).join(", ")+"}":n,""));return l}function I(e,t,n){return null==e?0:M(e,"",t,n)}function q(e,t){return"object"==typeof e&&null!==e&&null!=e.key?function(e){var t={"=":"=0",":":"=2"};return"$"+(""+e).replace(/[=:]/g,(function(e){return t[e]}))}(e.key):t.toString(36)}function F(e,t){e.func.call(e.context,t,e.count++)}function R(e,t,n){var a=e.result,r=e.keyPrefix;e=e.func.call(e.context,t,e.count++),Array.isArray(e)?U(e,a,n,(function(e){return e})):null!=e&&(E(e)&&(e=function(e,t){return{$$typeof:o,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}}(e,r+(!e.key||t&&t.key===e.key?"":(""+e.key).replace(x,"$&/")+"/")+n)),a.push(e))}function U(e,t,n,a,r){var o="";null!=n&&(o=(""+n).replace(x,"$&/")+"/"),I(e,R,t=P(t,o,a,r)),D(t)}var _={current:null};function $(){var e=_.current;if(null===e)throw Error(h(321));return e}},7378:(e,t,n)=>{"use strict";n(1535)},3905:(e,t,n)=>{"use strict";n.d(t,{Zo:()=>c,kt:()=>m});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),d=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=d(e.components);return a.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=d(n),m=r,g=u["".concat(s,".").concat(m)]||u[m]||p[m]||o;return n?a.createElement(g,i(i({ref:t},c),{},{components:n})):a.createElement(g,i({ref:t},c))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=u;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var d=2;d<o;d++)i[d]=n[d];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},3786:(e,t,n)=>{"use strict";n.r(t),n.d(t,{frontMatter:()=>i,contentTitle:()=>l,metadata:()=>s,toc:()=>d,default:()=>p});var a=n(2122),r=n(9756),o=(n(7378),n(3905)),i={id:"testing",title:"Testing",description:"This document describes how to write tests for a reSolve application."},l=void 0,s={unversionedId:"testing",id:"testing",isDocsHomePage:!1,title:"Testing",description:"This document describes how to write tests for a reSolve application.",source:"@site/../docs/testing.md",sourceDirName:".",slug:"/testing",permalink:"/resolve/docs/testing",version:"current",frontMatter:{id:"testing",title:"Testing",description:"This document describes how to write tests for a reSolve application."},sidebar:"docs",previous:{title:"Debugging",permalink:"/resolve/docs/debugging"},next:{title:"Application Configuration",permalink:"/resolve/docs/application-configuration"}},d=[{value:"Testing Tools",id:"testing-tools",children:[]},{value:"Testing Aggregates",id:"testing-aggregates",children:[{value:"Chainable Functions",id:"chainable-functions",children:[]},{value:"Assertions",id:"assertions",children:[]}]},{value:"Testing Read Models",id:"testing-read-models",children:[{value:"Chainable Functions",id:"chainable-functions-1",children:[]},{value:"Assertions",id:"assertions-1",children:[]}]},{value:"Testing Sagas",id:"testing-sagas",children:[{value:"Chainable Functions",id:"chainable-functions-2",children:[]},{value:"Assertions",id:"assertions-2",children:[]}]}],c={toc:d};function p(e){var t=e.components,n=(0,r.Z)(e,["components"]);return(0,o.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"testing-tools"},"Testing Tools"),(0,o.kt)("p",null,"The ",(0,o.kt)("strong",{parentName:"p"},"@resolve-js/testing-tools")," package contains utilities that allow you write BDD-style tests for reSolve aggregates, read models and sagas. The provided tools reproduce a read model's full lifecycle in the testing environment."),(0,o.kt)("p",null,"To write a test, call the ",(0,o.kt)("inlineCode",{parentName:"p"},"givenEvents")," function. This function takes an array of events and gives access to a number of chainable functions and assertions that you can combine to describe a test case."),(0,o.kt)("h2",{id:"testing-aggregates"},"Testing Aggregates"),(0,o.kt)("p",null,"Use the ",(0,o.kt)("inlineCode",{parentName:"p"},".aggregate")," function to add an aggregate to a test case. Use the following API to describe the test case for an aggregate:"),(0,o.kt)("h3",{id:"chainable-functions"},"Chainable Functions"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Function"),(0,o.kt)("th",{parentName:"tr",align:null},"Description"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"as(jwt)")),(0,o.kt)("td",{parentName:"tr",align:null},"Specifies a JSON Web Token used for authentication.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"command(name, payload?)")),(0,o.kt)("td",{parentName:"tr",align:null},"Specifies a command to pass to the Aggregate.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"withSecretsManager(manager)")),(0,o.kt)("td",{parentName:"tr",align:null},"Assigns a secrets manager to the aggregate")))),(0,o.kt)("h3",{id:"assertions"},"Assertions"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Assertion"),(0,o.kt)("th",{parentName:"tr",align:null},"Description"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"shouldProduceEvent(event)")),(0,o.kt)("td",{parentName:"tr",align:null},"Succeeds if the specified event was produced in the given test case.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"shouldThrow(error)")),(0,o.kt)("td",{parentName:"tr",align:null},"Succeeds if the Aggregate throws an exception.")))),(0,o.kt)("p",null,"The code sample below demonstrates a ",(0,o.kt)("strong",{parentName:"p"},"jest")," test for an Aggregate:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"test('expecting success command execution', () =>\n  givenEvents([])\n    .aggregate(aggregate)\n    .command('create', {})\n    .as('valid-user')\n    .shouldProduceEvent({\n      type: 'TEST_COMMAND_EXECUTED',\n      payload: {},\n    }))\n")),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"aggregate")," function's parameter should be an object with the following fields:"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Field"),(0,o.kt)("th",{parentName:"tr",align:null},"Description"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"name")),(0,o.kt)("td",{parentName:"tr",align:null},"The Aggregate's name.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"projection")),(0,o.kt)("td",{parentName:"tr",align:null},"The projection definition.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"commands")),(0,o.kt)("td",{parentName:"tr",align:null},"The definition of command handlers.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"encryption"),(0,o.kt)("em",{parentName:"td"},"(optional)")),(0,o.kt)("td",{parentName:"tr",align:null},"An encryption factory function.")))),(0,o.kt)("h2",{id:"testing-read-models"},"Testing Read Models"),(0,o.kt)("p",null,"Use the ",(0,o.kt)("inlineCode",{parentName:"p"},".readModel")," function to add a read model to a test case. Use the following API to describe a test case for a read model:"),(0,o.kt)("h3",{id:"chainable-functions-1"},"Chainable Functions"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Function"),(0,o.kt)("th",{parentName:"tr",align:null},"Description"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"as(jwt)")),(0,o.kt)("td",{parentName:"tr",align:null},"Specifies a JSON Web Token used for authentication.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"not()")),(0,o.kt)("td",{parentName:"tr",align:null},"Invers the assertions.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"query(resolver, args?)")),(0,o.kt)("td",{parentName:"tr",align:null},"Specifies a query to send to the read model.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"withAdapter(adapter)")),(0,o.kt)("td",{parentName:"tr",align:null},"Specifies a read model adapter to use.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"withEncryption(encryption)")),(0,o.kt)("td",{parentName:"tr",align:null},"Specifies an encryption factory function to use.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"withSecretsManager(manager)")),(0,o.kt)("td",{parentName:"tr",align:null},"Assigns a secrets manager to the aggregate")))),(0,o.kt)("h3",{id:"assertions-1"},"Assertions"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Assertion"),(0,o.kt)("th",{parentName:"tr",align:null},"Description"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"shouldReturn(expectedResult)")),(0,o.kt)("td",{parentName:"tr",align:null},"Specifies the result that should be return by a query defined in the test case.")))),(0,o.kt)("p",null,"The code sample below demonstrates a ",(0,o.kt)("strong",{parentName:"p"},"jest")," test for a read model:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"test('shouldReturn assertion', async () => {\n  await givenEvents([\n    { aggregateId: 'id2', type: 'TEST2', payload: { name: 'test-name' } },\n  ])\n    .readModel(readModel)\n    .query('get', { id: 2 })\n    .shouldReturn({ name: 'test-name' })\n})\n")),(0,o.kt)("p",null,"In this example, the ",(0,o.kt)("inlineCode",{parentName:"p"},".all")," function called at the end of the call chain is the ",(0,o.kt)("inlineCode",{parentName:"p"},"ShoppingLists")," read model's resolver function. It returns a promise that resolves to the resolver's response object."),(0,o.kt)("h2",{id:"testing-sagas"},"Testing Sagas"),(0,o.kt)("p",null,"Use the ",(0,o.kt)("inlineCode",{parentName:"p"},".saga")," function to add a saga to a test case. Use the following API to describe a test case for a saga:"),(0,o.kt)("h3",{id:"chainable-functions-2"},"Chainable Functions"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Function"),(0,o.kt)("th",{parentName:"tr",align:null},"Description"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"allowSideEffects()")),(0,o.kt)("td",{parentName:"tr",align:null},"Specifies that saga side effects are allowed.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"startSideEffectsFrom(date)")),(0,o.kt)("td",{parentName:"tr",align:null},"Specifies the date time from which to start to execute side effects.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"withAdapter(adapter)")),(0,o.kt)("td",{parentName:"tr",align:null},"Specifies a read model adapter to use.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"withEncryption(encryption)")),(0,o.kt)("td",{parentName:"tr",align:null},"Specifies an encryption factory function to use.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"withSecretsManager(manager)")),(0,o.kt)("td",{parentName:"tr",align:null},"Assigns a secrets manager to the aggregate")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"mockCommandImplementation(aggregateName, type, implementation)")),(0,o.kt)("td",{parentName:"tr",align:null},"Specifies a mock function to be called with the saga's commands.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"mockQueryImplementation(modelName, resolverName, implementation)")),(0,o.kt)("td",{parentName:"tr",align:null},"Specifies a mock function to be called with the saga's queries.")))),(0,o.kt)("h3",{id:"assertions-2"},"Assertions"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Assertion"),(0,o.kt)("th",{parentName:"tr",align:null},"Description"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"shouldExecuteCommand(command)")),(0,o.kt)("td",{parentName:"tr",align:null},"Succeeds if the saga executes the specified command.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"shouldExecuteQuery(query)")),(0,o.kt)("td",{parentName:"tr",align:null},"Succeeds if the saga executes the specified query.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"shouldExecuteSideEffect(name, ...args)")),(0,o.kt)("td",{parentName:"tr",align:null},"Succeeds if the saga calls the specified side effect function with the specified arguments.")))),(0,o.kt)("p",null,"The code sample below demonstrates a ",(0,o.kt)("strong",{parentName:"p"},"jest")," test for a saga:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"test('shouldExecuteSideEffect & shouldExecuteCommand', async () => {\n  await givenEvents([\n    {\n      type: 'CommandSideEffect',\n      aggregateId: 'aggregate-id',\n    },\n  ])\n    .saga(saga)\n    .shouldExecuteSideEffect('email', 'test', 'aggregate-id')\n    .shouldExecuteCommand({\n      type: 'create',\n      aggregateName: 'user',\n      aggregateId: 'id',\n      payload: {\n        item: 'aggregate-id',\n      },\n    })\n})\n")))}p.isMDXComponent=!0}}]);