"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[9378],{5318:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>m});var r=n(7378);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var u=r.createContext({}),l=function(e){var t=r.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=l(e.components);return r.createElement(u.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,u=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),d=l(n),m=a,g=d["".concat(u,".").concat(m)]||d[m]||p[m]||o;return n?r.createElement(g,i(i({ref:t},c),{},{components:n})):r.createElement(g,i({ref:t},c))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=d;var s={};for(var u in t)hasOwnProperty.call(t,u)&&(s[u]=t[u]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var l=2;l<o;l++)i[l]=n[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},6479:(e,t,n)=>{n.r(t),n.d(t,{frontMatter:()=>s,contentTitle:()=>u,metadata:()=>l,toc:()=>c,default:()=>d});var r=n(2685),a=n(1244),o=(n(7378),n(5318)),i=["components"],s={id:"authentication-and-authorization",title:"Authentication and Authorization",description:"You can use reSolve's built-in authentication module to enable authentication in your application."},u=void 0,l={unversionedId:"authentication-and-authorization",id:"authentication-and-authorization",isDocsHomePage:!1,title:"Authentication and Authorization",description:"You can use reSolve's built-in authentication module to enable authentication in your application.",source:"@site/../docs/authentication-and-authorization.md",sourceDirName:".",slug:"/authentication-and-authorization",permalink:"/resolve/docs/authentication-and-authorization",tags:[],version:"current",frontMatter:{id:"authentication-and-authorization",title:"Authentication and Authorization",description:"You can use reSolve's built-in authentication module to enable authentication in your application."},sidebar:"docs",previous:{title:"Modules",permalink:"/resolve/docs/modules"},next:{title:"Encryption",permalink:"/resolve/docs/encryption"}},c=[{value:"Setting up Authentication",id:"setting-up-authentication",children:[],level:2},{value:"Using 3rd-Party Auth Services",id:"using-3rd-party-auth-services",children:[],level:2},{value:"Storing a User Registry in the Application",id:"storing-a-user-registry-in-the-application",children:[{value:"Write side - The &quot;user&quot; aggregate",id:"write-side---the-user-aggregate",children:[],level:4},{value:"Read side - The &quot;users&quot; read model",id:"read-side---the-users-read-model",children:[],level:4}],level:2},{value:"Using JWT for Command and Query Authorization",id:"using-jwt-for-command-and-query-authorization",children:[],level:2}],p={toc:c};function d(e){var t=e.components,n=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"setting-up-authentication"},"Setting up Authentication"),(0,o.kt)("p",null,"You can use reSolve's built-in ",(0,o.kt)("a",{parentName:"p",href:"/resolve/docs/modules"},"module")," (",(0,o.kt)("strong",{parentName:"p"},"@resolve-js/module-auth"),") to enable authentication in your application. The authentication module uses the ",(0,o.kt)("a",{parentName:"p",href:"http://www.passportjs.org/"},"Passport.js")," library."),(0,o.kt)("p",null,"Initialize the authentication module in the application's ",(0,o.kt)("strong",{parentName:"p"},"run.js")," script:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"const moduleAuth = resolveModuleAuth([\n  {\n    name: 'local-strategy',\n    createStrategy: 'auth/create_strategy.js',\n    logoutRoute: {\n      path: 'logout',\n      method: 'POST',\n    },\n    routes: [\n      {\n        path: 'register',\n        method: 'POST',\n        callback: 'auth/route_register_callback.js',\n      },\n      {\n        path: 'login',\n        method: 'POST',\n        callback: 'auth/route_login_callback.js',\n      },\n    ],\n  },\n])\n\nconst baseConfig = merge(\n  defaultResolveConfig,\n  appConfig,\n  moduleComments,\n  moduleAuth\n)\n")),(0,o.kt)("p",null,"These setting specify the path to a strategy constructor and HTTP API handlers to handle authentication-related requests (register, login and logout in this example). You can implement a strategy constructor as shown below:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"import { Strategy as StrategyFactory } from 'passport-local'\n\nconst createStrategy = options => ({\n  factory: StrategyFactory,\n  options: {\n    failureRedirect: error =>\n      `/error?text=${encodeURIComponent(error.message)}`,\n    errorRedirect: error => `/error?text=${encodeURIComponent(error.message)}`,\n    usernameField: 'username',\n    passwordField: 'username',\n    successRedirect: null,\n    ...options\n  }\n})\n\nexport default createStrategy\n")),(0,o.kt)("p",null,"This code sample implements a strategy constructor for a ",(0,o.kt)("strong",{parentName:"p"},"local")," authentication strategy. The ",(0,o.kt)("strong",{parentName:"p"},"createStrategy")," constructor takes a set of options defined at runtime and returns modified options."),(0,o.kt)("p",null,"See the ",(0,o.kt)("strong",{parentName:"p"},"Hacker News")," example project for the full code."),(0,o.kt)("h2",{id:"using-3rd-party-auth-services"},"Using 3rd-Party Auth Services"),(0,o.kt)("p",null,"You can implement authentication via 3rd-party services similarly to how you implement local authentication. To implement authentication for a particular service, use corresponding Passport modules, for example, ",(0,o.kt)("strong",{parentName:"p"},"passport-google")," or ",(0,o.kt)("strong",{parentName:"p"},"passport-facebook"),"."),(0,o.kt)("h2",{id:"storing-a-user-registry-in-the-application"},"Storing a User Registry in the Application"),(0,o.kt)("p",null,"You can use the standard event sourcing approach to implement a user registry. This is useful in the following cases:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"You prefer to store a user registry in your application without third-party services."),(0,o.kt)("li",{parentName:"ul"},"You use a third-party authentication service but need to store additional information that is not provided by this service (for example, roles or permissions).")),(0,o.kt)("p",null,"Use the following steps to implement a user registry:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Add a User aggregate to accept commands and generate events related to managing a user registry"),(0,o.kt)("li",{parentName:"ol"},"Create a read model and use it to look up a user's information during logging in and add this information to a JWT (JSON Web Token)")),(0,o.kt)("p",null,"For example, you can write the following if you want to grant permissions to a user:"),(0,o.kt)("h4",{id:"write-side---the-user-aggregate"},'Write side - The "user" aggregate'),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'// user.commands.js\n...\ngrantPermission: (state, command) => {\n   const {payload: {permission: permissionToGrant }} = command;\n\n   if (state.permissions.includes(permissionToGrant)) {\n       throw new Error("permission aleady granted")\n   }\n   return {\n       type: PERMISSION_GRANTED,\n       payload: {\n           permission: permissionToGrant\n       }\n   }\n}\n...\n')),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"// user.projection.js\n...\n[PERMISSION_GRANTED]: (state, {payload: {permission}}) => ({\n    ...state,\n    permissions: [...state.permissions, permission]\n})\n...\n")),(0,o.kt)("h4",{id:"read-side---the-users-read-model"},'Read side - The "users" read model'),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"// users.projection.js\n...\n[PERMISSION_GRANTED]: async (store, {aggregateId, payload:{permission}}) => {\n    const user = await store.findOne('Users', { id: aggregateId })\n    if (user) {\n        await store.update(\n          'Users',\n          { id: aggregateId },\n          { $set: {permissions: [...user.permissions, permission]}}\n        )\n    }\n}\n...\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"// users.resolvers.js\n...\nuserById: async(store, {id}) => store.findOne('Users', {id})\n...\n")),(0,o.kt)("p",null,"You can now query a user's read model and add the obtained user information to the JWT payload when they log in:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"...\nconst { data: user } = await resolve.executeQuery({\n  modelName: 'Users',\n  resolverName: 'userById',\n  resolverArgs: { id }\n})\nif (user)\n  return jwt.sign(user, jwtSecret)\n...\n")),(0,o.kt)("h2",{id:"using-jwt-for-command-and-query-authorization"},"Using JWT for Command and Query Authorization"),(0,o.kt)("p",null,"Every command and query handler accepts a JSON Web Token (JWT) obtained during the authentication process. This JWT contains an object that the authentication function returned, or an empty object ",(0,o.kt)("inlineCode",{parentName:"p"},"{}")," if the current user is not logged in."),(0,o.kt)("p",null,"A JWT is signed with a secret to prevent forgery. Use the same secret to decode and verify the token."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"const { id: userId } = jwt.verify(token, jwtSecret)\n")),(0,o.kt)("p",null,"You can store any information in a JWT. For instance, you can look up a user's permissions and add them to the token\nduring authentication. Then, you can check the user's permissions during a command or query execution as shown below:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'const { id: userId, permissions } = jwt.verify(token, jwtSecret);\n\nif (permissions && permissions.includes("admin")) {\n...\n} else {\n    throw new Error("Access denied");\n}\n')))}d.isMDXComponent=!0}}]);