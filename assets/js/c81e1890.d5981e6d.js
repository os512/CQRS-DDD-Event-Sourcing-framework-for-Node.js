"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[6209],{5318:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>m});var r=n(7378);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),p=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=p(e.components);return r.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),u=p(n),m=a,g=u["".concat(l,".").concat(m)]||u[m]||d[m]||o;return n?r.createElement(g,i(i({ref:t},c),{},{components:n})):r.createElement(g,i({ref:t},c))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=u;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var p=2;p<o;p++)i[p]=n[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},9889:(e,t,n)=>{n.r(t),n.d(t,{frontMatter:()=>s,contentTitle:()=>l,metadata:()=>p,toc:()=>c,default:()=>u});var r=n(2685),a=n(1244),o=(n(7378),n(5318)),i=["components"],s={id:"resolve-scripts",title:"reSolve Scripts",description:"This document describes service scripts used to configure, build, and run reSolve applications."},l=void 0,p={unversionedId:"api/resolve-scripts",id:"api/resolve-scripts",isDocsHomePage:!1,title:"reSolve Scripts",description:"This document describes service scripts used to configure, build, and run reSolve applications.",source:"@site/../docs/api/resolve-scripts.md",sourceDirName:"api",slug:"/api/resolve-scripts",permalink:"/resolve/docs/api/resolve-scripts",tags:[],version:"current",frontMatter:{id:"resolve-scripts",title:"reSolve Scripts",description:"This document describes service scripts used to configure, build, and run reSolve applications."},sidebar:"docs",previous:{title:"API Handler",permalink:"/resolve/docs/api/api-handler"},next:{title:"HTTP API",permalink:"/resolve/docs/api/client/http-api"}},c=[{value:"build",id:"build",children:[]},{value:"start",id:"start",children:[]},{value:"watch",id:"watch",children:[]},{value:"runTestcafe",id:"runtestcafe",children:[]},{value:"merge",id:"merge",children:[]},{value:"reset",id:"reset",children:[]},{value:"importEventStore",id:"importeventstore",children:[]},{value:"exportEventStore",id:"exporteventstore",children:[]},{value:"validateConfig",id:"validateconfig",children:[]}],d={toc:c};function u(e){var t=e.components,n=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"The ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/reimagined/resolve/tree/master/packages/tools/scripts"},"@resolve-js/scripts")," package contains service scripts used to configure, build, and run reSolve applications. The package contains the following scripts:"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Script"),(0,o.kt)("th",{parentName:"tr",align:null},"Description"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"#build"},"build")),(0,o.kt)("td",{parentName:"tr",align:null},"Builds an application.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"#start"},"start")),(0,o.kt)("td",{parentName:"tr",align:null},"Runs an application.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"#watch"},"watch")),(0,o.kt)("td",{parentName:"tr",align:null},"Runs an application in ",(0,o.kt)("strong",{parentName:"td"},"watch")," mode. (Watch application files for changes.)")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"#runtestcafe"},"runTestcafe")),(0,o.kt)("td",{parentName:"tr",align:null},"Runs TestCafe tests.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"#merge"},"merge")),(0,o.kt)("td",{parentName:"tr",align:null},"Merges modules and application configurations into a single object.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"#stop"},"stop")),(0,o.kt)("td",{parentName:"tr",align:null},"Stops an application.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"#reset"},"reset")),(0,o.kt)("td",{parentName:"tr",align:null},"Resets an application's persistent storages and snapshots.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"#importeventstore"},"importEventStore")),(0,o.kt)("td",{parentName:"tr",align:null},"Imports events from a file to an application's event store.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"#exporteventstore"},"exportEventStore")),(0,o.kt)("td",{parentName:"tr",align:null},"Exports events from an application's event store to a file.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"#validateconfig"},"validateConfig")),(0,o.kt)("td",{parentName:"tr",align:null},"Validates a configuration object.")))),(0,o.kt)("p",null,"The @resolve-js/scripts library also exports a ",(0,o.kt)("inlineCode",{parentName:"p"},"defaultResolveConfig")," object that contains default configuration settings. This object is merged with an application's configuration objects to receive a global configuration object:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"// run.js\nconst resolveConfig = merge(defaultResolveConfig, appConfig, devConfig)\n")),(0,o.kt)("h3",{id:"build"},"build"),(0,o.kt)("p",null,"Builds an application."),(0,o.kt)("h4",{id:"example"},"Example"),(0,o.kt)("h4",{id:"build-1"},"build"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"import {\n  build,\n  ...\n} from '@resolve-js/scripts'\n    ...\n    switch (launchMode) {\n    ...\n      case 'build': {\n        const resolveConfig = merge(baseConfig, prodConfig)\n        await build(resolveConfig)\n        break\n      }\n      ...\n    }\n")),(0,o.kt)("h3",{id:"start"},"start"),(0,o.kt)("p",null,"Runs a built application."),(0,o.kt)("h4",{id:"example-1"},"Example"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"import {\n  ...\n  start,\n  ...\n} from '@resolve-js/scripts'\n    ...\n    switch (launchMode) {\n      ...\n      case 'start': {\n        await start(merge(baseConfig, prodConfig))\n        break\n      }\n      ...\n    }\n")),(0,o.kt)("h3",{id:"watch"},"watch"),(0,o.kt)("p",null,"Runs an application in ",(0,o.kt)("strong",{parentName:"p"},"watch")," mode. (Watch application files for changes.)"),(0,o.kt)("h4",{id:"example-2"},"Example"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"import {\n  ...\n  watch,\n  ...\n} from '@resolve-js/scripts'\n    ...\n    switch (launchMode) {\n      ...\n      case 'dev': {\n        const resolveConfig = merge(baseConfig, devConfig)\n        await watch(resolveConfig)\n        break\n      }\n      ...\n    }\n")),(0,o.kt)("h3",{id:"runtestcafe"},"runTestcafe"),(0,o.kt)("p",null,"Runs TestCafe tests."),(0,o.kt)("h4",{id:"example-3"},"Example"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"import {\n  ...\n  runTestcafe,\n  ...\n} from '@resolve-js/scripts'\n    ...\n    switch (launchMode) {\n      ...\n      case 'test:functional': {\n        const resolveConfig = merge(baseConfig, testFunctionalConfig)\n        await runTestcafe({\n          resolveConfig,\n          functionalTestsDir: 'test/functional',\n          browser: process.argv[3]\n        })\n        break\n      }\n      ...\n    }\n")),(0,o.kt)("h3",{id:"merge"},"merge"),(0,o.kt)("p",null,"Merges modules and application configs into a single object."),(0,o.kt)("h4",{id:"example-4"},"Example"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"import {\n  ...\n  merge,\n  ...\n} from '@resolve-js/scripts'\n  ...\n    const resolveConfig = merge(defaultResolveConfig, appConfig, devConfig)\n")),(0,o.kt)("h3",{id:"reset"},"reset"),(0,o.kt)("p",null,"Resets an application's persistent storages and snapshots."),(0,o.kt)("h4",{id:"example-5"},"Example"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"import {\n  ...\n  reset,\n  ...\n} from '@resolve-js/scripts'\n    ...\n    switch (launchMode) {\n      ...\n      case 'reset': {\n        const resolveConfig = merge(baseConfig, devConfig)\n        await reset(resolveConfig, {\n          dropEventStore: true,\n          dropEventSubscriber: true,\n          dropReadModels: true,\n          dropSagas: true\n        })\n        break\n      }\n      ...\n    }\n")),(0,o.kt)("h3",{id:"importeventstore"},"importEventStore"),(0,o.kt)("p",null,"Imports events from a file to an application's event store."),(0,o.kt)("h4",{id:"example-6"},"Example"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"import {\n  ...\n  importEventStore,\n  ...\n} from '@resolve-js/scripts'\n    ...\n    switch (launchMode) {\n      ...\n      case 'import-event-store': {\n        const resolveConfig = merge(baseConfig, devConfig)\n\n        const importFile = process.argv[3]\n        await importEventStore(resolveConfig, { importFile })\n        break\n      }\n      ...\n    }\n")),(0,o.kt)("h3",{id:"exporteventstore"},"exportEventStore"),(0,o.kt)("p",null,"Exports events from an application's event store to a file."),(0,o.kt)("h4",{id:"example-7"},"Example"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"import {\n  ...\n  exportEventStore,\n  ...\n} from '@resolve-js/scripts'\n    ...\n    switch (launchMode) {\n      ...\n      case 'export-event-store': {\n        const resolveConfig = merge(baseConfig, devConfig)\n\n        const exportFile = process.argv[3]\n        await exportEventStore(resolveConfig, { exportFile })\n        break\n      }\n      ...\n    }\n")),(0,o.kt)("h3",{id:"validateconfig"},"validateConfig"),(0,o.kt)("p",null,"Validates a configuration object."),(0,o.kt)("h4",{id:"example-8"},"Example"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"import {\n  ...\n  validateConfig,\n  ...\n} from '@resolve-js/scripts'\n    ...\n    validateConfig(config)\n")))}u.isMDXComponent=!0}}]);