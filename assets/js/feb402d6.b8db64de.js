"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[3570],{4161:(e,n,r)=>{r.r(n),r.d(n,{frontMatter:()=>p,contentTitle:()=>s,metadata:()=>c,toc:()=>l,default:()=>d});var t=r(2685),o=r(1244),i=(r(7378),r(5318)),a=["components"],p={id:"preparing-for-production",title:"Preparing for Production",description:"This document describes how to prepare a reSolve application for deployment to a production server environment."},s=void 0,c={unversionedId:"preparing-for-production",id:"preparing-for-production",isDocsHomePage:!1,title:"Preparing for Production",description:"This document describes how to prepare a reSolve application for deployment to a production server environment.",source:"@site/../docs/preparing-for-production.md",sourceDirName:".",slug:"/preparing-for-production",permalink:"/resolve/docs/preparing-for-production",tags:[],version:"current",frontMatter:{id:"preparing-for-production",title:"Preparing for Production",description:"This document describes how to prepare a reSolve application for deployment to a production server environment."},sidebar:"docs",previous:{title:"Event Export and Import",permalink:"/resolve/docs/export-import"},next:{title:"Code Splitting",permalink:"/resolve/docs/code-splitting"}},l=[{value:"Configuration Options",id:"configuration-options",children:[],level:2},{value:"Configuring Adapters",id:"configuring-adapters",children:[],level:2},{value:"Using Environment Variables",id:"using-environment-variables",children:[],level:2}],u={toc:l};function d(e){var n=e.components,r=(0,o.Z)(e,a);return(0,i.kt)("wrapper",(0,t.Z)({},u,r,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"configuration-options"},"Configuration Options"),(0,i.kt)("p",null,"When you move your application to production, you need to perform all required configurations according to your production environment's specifics."),(0,i.kt)("p",null,"An application is built for production using the ",(0,i.kt)("strong",{parentName:"p"},"build")," script, and run in the production mode using the ",(0,i.kt)("strong",{parentName:"p"},"start")," script. By default, an application that runs in the production mode takes into account settings specifies in the ",(0,i.kt)("strong",{parentName:"p"},"prodConfig")," configuration object (the ",(0,i.kt)("strong",{parentName:"p"},"config.prod.js")," file). However, you can use other config structure as long as you properly register it in the ",(0,i.kt)("strong",{parentName:"p"},"run.js")," file."),(0,i.kt)("p",null,"An example ",(0,i.kt)("strong",{parentName:"p"},"config.prod.js")," file:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"// config.prod.js\nconst prodConfig = {\n  port: 3000,\n  mode: 'production',\n  readModelConnectors: {\n    HackerNews: {\n      module: '@resolve-js/readmodel-lite',\n      options: {},\n    },\n  },\n  jwtCookie: {\n    name: 'jwt',\n    maxAge: 31536000000,\n  },\n}\n\nexport default prodConfig\n")),(0,i.kt)("h2",{id:"configuring-adapters"},"Configuring Adapters"),(0,i.kt)("p",null,"Before you move your app into production, specify all required ",(0,i.kt)("a",{parentName:"p",href:"/resolve/docs/adapters"},"adapters")," in the production config."),(0,i.kt)("p",null,"Depending on your requirements, you may want to specify storage adapters for events, Read Model data and View Model snapshots."),(0,i.kt)("p",null,"The code below demonstrates how to set up a storage adapter on the example of an in-memory Read Model storage:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"// config.prod.js\nconst prodConfig = {\n  readModelConnectors: {\n    HackerNews: {\n      module: '@resolve-js/readmodel-lite',\n      options: {},\n    },\n  },\n  ...\n}\n")),(0,i.kt)("h2",{id:"using-environment-variables"},"Using Environment Variables"),(0,i.kt)("p",null,"Use the ",(0,i.kt)("strong",{parentName:"p"},"declareRuntimeEnv")," function from the ",(0,i.kt)("strong",{parentName:"p"},"@resolve-js/scripts")," library to bind a configuration setting value to an environment variable:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"// config.prod.js\nimport { declareRuntimeEnv } from '@resolve-js/scripts'\nexport default {\n  readModelsConnectors: {\n    HackerNews: {\n      module: '@resolve-js/readmodel-postgresql',\n      options: {\n        databaseName: declareRuntimeEnv('RESOLVE_READMODEL_DATABASE_NAME'),\n        host: declareRuntimeEnv('RESOLVE_READMODEL_CLUSTER_HOST'),\n        port: declareRuntimeEnv('RESOLVE_READMODEL_CLUSTER_PORT'),\n        user: declareRuntimeEnv('RESOLVE_USER_ID'),\n        password: declareRuntimeEnv('RESOLVE_USER_PASSWORD'),\n        database: 'postgres',\n      },\n    },\n  },\n  ...\n}\nexport default prodConfig\n")),(0,i.kt)("p",null,"This approach is useful when you need to assign settings that should not be included in application sources (e.g., authentication credentials or secret keys) or settings that should be defined by a server instance."))}d.isMDXComponent=!0},5318:(e,n,r)=>{r.d(n,{Zo:()=>l,kt:()=>f});var t=r(7378);function o(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function i(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function a(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?i(Object(r),!0).forEach((function(n){o(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function p(e,n){if(null==e)return{};var r,t,o=function(e,n){if(null==e)return{};var r,t,o={},i=Object.keys(e);for(t=0;t<i.length;t++)r=i[t],n.indexOf(r)>=0||(o[r]=e[r]);return o}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(t=0;t<i.length;t++)r=i[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var s=t.createContext({}),c=function(e){var n=t.useContext(s),r=n;return e&&(r="function"==typeof e?e(n):a(a({},n),e)),r},l=function(e){var n=c(e.components);return t.createElement(s.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},d=t.forwardRef((function(e,n){var r=e.components,o=e.mdxType,i=e.originalType,s=e.parentName,l=p(e,["components","mdxType","originalType","parentName"]),d=c(r),f=o,m=d["".concat(s,".").concat(f)]||d[f]||u[f]||i;return r?t.createElement(m,a(a({ref:n},l),{},{components:r})):t.createElement(m,a({ref:n},l))}));function f(e,n){var r=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var i=r.length,a=new Array(i);a[0]=d;var p={};for(var s in n)hasOwnProperty.call(n,s)&&(p[s]=n[s]);p.originalType=e,p.mdxType="string"==typeof e?e:o,a[1]=p;for(var c=2;c<i;c++)a[c]=r[c];return t.createElement.apply(null,a)}return t.createElement.apply(null,r)}d.displayName="MDXCreateElement"}}]);