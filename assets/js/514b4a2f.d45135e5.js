"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[4711],{5318:(e,t,a)=>{a.d(t,{Zo:()=>p,kt:()=>k});var n=a(7378);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=n.createContext({}),d=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},p=function(e){var t=d(e.components);return n.createElement(s.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,l=e.originalType,s=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),u=d(a),k=r,c=u["".concat(s,".").concat(k)]||u[k]||m[k]||l;return a?n.createElement(c,o(o({ref:t},p),{},{components:a})):n.createElement(c,o({ref:t},p))}));function k(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=a.length,o=new Array(l);o[0]=u;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:r,o[1]=i;for(var d=2;d<l;d++)o[d]=a[d];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}u.displayName="MDXCreateElement"},674:(e,t,a)=>{a.r(t),a.d(t,{frontMatter:()=>i,contentTitle:()=>s,metadata:()=>d,toc:()=>p,default:()=>u});var n=a(2685),r=a(1244),l=(a(7378),a(5318)),o=["components"],i={id:"application-configuration",title:"Configuration",description:"This document lists configuration options available for a reSolve application."},s=void 0,d={unversionedId:"application-configuration",id:"application-configuration",isDocsHomePage:!1,title:"Configuration",description:"This document lists configuration options available for a reSolve application.",source:"@site/../docs/application-configuration.md",sourceDirName:".",slug:"/application-configuration",permalink:"/resolve/docs/application-configuration",tags:[],version:"current",frontMatter:{id:"application-configuration",title:"Configuration",description:"This document lists configuration options available for a reSolve application."},sidebar:"docs",previous:{title:"Request Middleware",permalink:"/resolve/docs/api/client/request-middleware"},next:{title:"FAQ",permalink:"/resolve/docs/faq"}},p=[{value:"Overview",id:"overview",children:[]},{value:"Reference",id:"reference",children:[{value:"aggregates",id:"aggregates",children:[]},{value:"apiHandlers",id:"apihandlers",children:[]},{value:"clientEntries",id:"cliententries",children:[]},{value:"clientImports",id:"clientimports",children:[]},{value:"distDir",id:"distdir",children:[]},{value:"eventstoreAdapter",id:"eventstoreadapter",children:[]},{value:"host",id:"host",children:[]},{value:"middleware",id:"middleware",children:[]},{value:"jwtCookie",id:"jwtcookie",children:[]},{value:"mode",id:"mode",children:[]},{value:"name",id:"name",children:[]},{value:"port",id:"port",children:[]},{value:"readModels",id:"readmodels",children:[]},{value:"readModelConnectors",id:"readmodelconnectors",children:[]},{value:"sagas",id:"sagas",children:[]},{value:"schedulers",id:"schedulers",children:[]},{value:"serverImports",id:"serverimports",children:[]},{value:"staticDir",id:"staticdir",children:[]},{value:"staticPath",id:"staticpath",children:[]},{value:"target",id:"target",children:[]},{value:"viewModels",id:"viewmodels",children:[]}]}],m={toc:p};function u(e){var t=e.components,a=(0,r.Z)(e,o);return(0,l.kt)("wrapper",(0,n.Z)({},m,a,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h2",{id:"overview"},"Overview"),(0,l.kt)("p",null,"This document describes configuration options available for a reSolve application."),(0,l.kt)("p",null,"In a new reSolve application, configuration settings are split across the following files for different run targets:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"config.app.js")," - Contains general app configuration settings. In this file, you should register the application's aggregates, Read Models and View Models."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"config.cloud.js")," - Contains configuration settings that target the reSolve Cloud environment."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"config.dev.js")," - Contains configuration settings that target the development server."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"config.prod.js")," - Contains configuration settings that target the production server."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"config.test_functional.js")," - Contains configuration settings that target the test environment.")),(0,l.kt)("p",null,"All these options are merged into a global configuration object and passed to a run script based on the logic defined in the ",(0,l.kt)("strong",{parentName:"p"},"run.js")," file:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"import {\n  ...\n  watch,\n  ...\n} from '@resolve-js/scripts'\n    ...\n    switch (launchMode) {\n      ...\n      case 'dev': {\n        const resolveConfig = merge(baseConfig, devConfig)\n        await watch(resolveConfig)\n        break\n      }\n      ...\n    }\n")),(0,l.kt)("p",null,"Refer to the ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/reimagined/resolve/blob/master/packages/core/@resolve-js/scripts/configs/schema.resolve.config.json"},"JSON schema")," file to familiarize yourself with the definition of the configuration object's structure."),(0,l.kt)("h2",{id:"reference"},"Reference"),(0,l.kt)("h3",{id:"aggregates"},"aggregates"),(0,l.kt)("p",null,"An array of the application's aggregates. An aggregate configuration object within this array contains the following fields:"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Field"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"name"),(0,l.kt)("td",{parentName:"tr",align:null},"The aggregate's name.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"commands"),(0,l.kt)("td",{parentName:"tr",align:null},"A path to a file that defines aggregate commands.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"projection"),(0,l.kt)("td",{parentName:"tr",align:null},"A path to a file that defines aggregate projection.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"serializeState"),(0,l.kt)("td",{parentName:"tr",align:null},"A path to a file that defines a state serializer function.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"deserializeState"),(0,l.kt)("td",{parentName:"tr",align:null},"A path to a file that defines a state deserializer function.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"encryption"),(0,l.kt)("td",{parentName:"tr",align:null},"A path to a file that defines data encryption and decryption logic.")))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"aggregates: [\n  {\n    name: 'ShoppingList',\n    commands: 'common/aggregates/shopping_list.commands.js',\n    projection: 'common/aggregates/shopping_list.projection.js',\n  },\n]\n")),(0,l.kt)("h3",{id:"apihandlers"},"apiHandlers"),(0,l.kt)("p",null,"Specifies an array of the application's API Handlers. An API handler configuration object within this array contains the following fields:"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Field"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"path"),(0,l.kt)("td",{parentName:"tr",align:null},"The URL path for which the handler is invoked. The path is specified in the ",(0,l.kt)("a",{parentName:"td",href:"https://www.npmjs.com/package/route-trie"},"route-trie")," router's format.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"handler"),(0,l.kt)("td",{parentName:"tr",align:null},"The path to the file that contains the handler's definition.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"method"),(0,l.kt)("td",{parentName:"tr",align:null},"The HTTP method to handle.")))),(0,l.kt)("h5",{id:"example"},"Example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"apiHandlers: [\n  {\n    path: '/api/uploader/getFileUrl',\n    handler: 'common/api-handlers/getFileUrl.js',\n    method: 'GET',\n  },\n]\n")),(0,l.kt)("h3",{id:"cliententries"},"clientEntries"),(0,l.kt)("p",null,"Specifies an array of the client application script's entry points. The entry point is specified as a path to a JavaScript file. The file should export a function that takes a ",(0,l.kt)("inlineCode",{parentName:"p"},"resolveContext")," as a parameter."),(0,l.kt)("h5",{id:"clientindexjs"},"client/index.js:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"const main = async resolveContext => {\n...\n}\nexport default main\n")),(0,l.kt)("h5",{id:"configappjs"},"config.app.js:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"clientEntries: ['client/index.js']\n")),(0,l.kt)("p",null,"In this section, you can also specify an array of Server Side Rendering (SSR) scripts that target different environments:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"clientEntries: [\n  'client/index.js',\n  [\n    'client/ssr.js',\n    {\n      outputFile: 'common/local-entry/ssr.js',\n      moduleType: 'commonjs',\n      target: 'node',\n    },\n  ],\n  [\n    'client/ssr.js',\n    {\n      outputFile: 'common/cloud-entry/ssr.js',\n      moduleType: 'commonjs',\n      target: 'node',\n    },\n  ],\n]\n")),(0,l.kt)("p",null,"Each entry in this array should specify the path to the SSR script and a configuration object with the following fields:"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Field"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"outputFile"),(0,l.kt)("td",{parentName:"tr",align:null},"The path to a file in which to place the SSR script for the current environment.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"moduleType"),(0,l.kt)("td",{parentName:"tr",align:null},"The type of a chunk generated by SSR.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"target"),(0,l.kt)("td",{parentName:"tr",align:null},"The type of the environment that will run the script.")))),(0,l.kt)("p",null,"The following module type options are available:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"'iife'")," - A chunk that contains an Immediately Invoked Function Expression (IIFE)."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"'commonjs'")," - A chunk in the CommonJS module format."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"'esm'")," - A chunk in the ECMAScript module format.")),(0,l.kt)("p",null,"The following target options are available:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"'web'")," - The client will run the script."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"'node'")," - The server will run the script.")),(0,l.kt)("p",null,"To serve SSR markup to the client, you need to register the ",(0,l.kt)("strong",{parentName:"p"},"live-require-handler.js")," API handler in the ",(0,l.kt)("strong",{parentName:"p"},"apiHandlers")," configuration section:"),(0,l.kt)("h5",{id:"configappjs-1"},"config.app.js:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"...\napiHandlers: [\n  {\n    handler: {\n      module: '@resolve-js/runtime/lib/common/handlers/live-require-handler.js',\n      options: {\n        modulePath: './ssr.js',\n        moduleFactoryImport: false\n      }\n    },\n    path: '/:markup*',\n    method: 'GET'\n  }\n],\n...\n")),(0,l.kt)("h3",{id:"clientimports"},"clientImports"),(0,l.kt)("p",null,"Specifies JavaScript files within the project, whose exports should be passed to the client script through the client entry point's parameter."),(0,l.kt)("p",null,"The configuration object should be an array of file paths."),(0,l.kt)("h3",{id:"distdir"},"distDir"),(0,l.kt)("p",null,"Specifies the project directory where compiled distributable files are saved."),(0,l.kt)("h3",{id:"eventstoreadapter"},"eventstoreAdapter"),(0,l.kt)("p",null,"Specifies an adapter used to connect to to the application's event store. An adapter configuration object contains the following fields:"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Field"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"module"),(0,l.kt)("td",{parentName:"tr",align:null},"The name of a module or the path to a file that defines an adapter.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"options"),(0,l.kt)("td",{parentName:"tr",align:null},"An object that defines the adapter's options as key-value pairs.")))),(0,l.kt)("h5",{id:"example-1"},"Example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"eventstoreAdapter: {\n  module: '@resolve-js/eventstore-lite',\n  options: {\n    databaseFile: ':memory:'\n  }\n}\n")),(0,l.kt)("p",null,"The following adapters are available:"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Adapter Module"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"#eventstore-lite"},"@resolve-js/eventstore-lite")),(0,l.kt)("td",{parentName:"tr",align:null},"Used to store events in an SQLite database.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"#eventstore-mysql"},"@resolve-js/eventstore-mysql")),(0,l.kt)("td",{parentName:"tr",align:null},"Used to store events in a MySQL database.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"#eventstore-postgresql"},"@resolve-js/eventstore-postgresql")),(0,l.kt)("td",{parentName:"tr",align:null},"Used to store events in a PostgreSQL database.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"#eventstore-postgresql-serverless"},"@resolve-js/eventstore-postgresql-serverless")),(0,l.kt)("td",{parentName:"tr",align:null},"Used to store events in AWS Aurora PostgreSQL Serverless.")))),(0,l.kt)("h4",{id:"eventstore-lite"},"eventstore-lite"),(0,l.kt)("p",null,"Used to store events in an SQLite database."),(0,l.kt)("p",null,"This adapter supports the following options:"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Option Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"databaseFile"),(0,l.kt)("td",{parentName:"tr",align:null},"Specifies the path to a database file used to store events. If set to ",(0,l.kt)("inlineCode",{parentName:"td"},"':memory:'"),", all data is stored in memory and is lost when the application is shut down or restarted.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"secretsTableName"),(0,l.kt)("td",{parentName:"tr",align:null},"The name of a database table used to store secrets.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"snapshotBucketSize"),(0,l.kt)("td",{parentName:"tr",align:null},"The number of events between aggregate snapshots.")))),(0,l.kt)("h5",{id:"example-2"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"const prodConfig = {\n  eventstoreAdapter: {\n    module: '@resolve-js/eventstore-lite',\n    options: {\n      databaseFile: 'data/event-store.db'\n      // databaseFile: ':memory:'\n    },\n  },\n  ...\n}\n")),(0,l.kt)("h4",{id:"eventstore-mysql"},"eventstore-mysql"),(0,l.kt)("p",null,"Used to store events in a MySQL database."),(0,l.kt)("p",null,"To configure the database connection for this adapter, specify ",(0,l.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/mysql2#first-query"},"MySQL connection setting")," as the adapter's options. Additionally, you can specify the following options:"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Option Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"eventsTableName"),(0,l.kt)("td",{parentName:"tr",align:null},"The name of a database table used to store events.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"secretsTableName"),(0,l.kt)("td",{parentName:"tr",align:null},"The name of a database table used to store secrets.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"snapshotBucketSize"),(0,l.kt)("td",{parentName:"tr",align:null},"The number of events between aggregate snapshots.")))),(0,l.kt)("h5",{id:"example-3"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"const prodConfig = {\n  eventstoreAdapter: {\n    module: '@resolve-js/eventstore-mysql',\n    options: {\n      host: 'localhost',\n      port: 3306,\n      user: 'customUser',\n      password: 'customPassword',\n      database: 'customDatabaseName',\n      eventsTableName: 'customTableName',\n    }\n  },\n  ...\n}\n")),(0,l.kt)("h4",{id:"eventstore-postgresql"},"eventstore-postgresql"),(0,l.kt)("p",null,"Used to store events in a PostgreSQL database."),(0,l.kt)("p",null,"This adapter supports the following options:"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Option Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"database"),(0,l.kt)("td",{parentName:"tr",align:null},"The name of a database.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"databaseName"),(0,l.kt)("td",{parentName:"tr",align:null},"The name of a PostgreSQL database schema.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"eventsTableName"),(0,l.kt)("td",{parentName:"tr",align:null},"The name of a database table used to store events.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"host"),(0,l.kt)("td",{parentName:"tr",align:null},"The database server host name.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"password"),(0,l.kt)("td",{parentName:"tr",align:null},"The user's password.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"port"),(0,l.kt)("td",{parentName:"tr",align:null},"The database server port number.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"secretsTableName"),(0,l.kt)("td",{parentName:"tr",align:null},"The name of a database table used to store secrets.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"snapshotBucketSize"),(0,l.kt)("td",{parentName:"tr",align:null},"The number of events between aggregate snapshots.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"user"),(0,l.kt)("td",{parentName:"tr",align:null},"The user name used to log in to the database server.")))),(0,l.kt)("h5",{id:"example-4"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"const prodConfig = {\n  eventstoreAdapter: {\n    module: '@resolve-js/eventstore-postgresql',\n    options: {\n      user: 'user',\n      password: 'password',\n      database: 'postgres',\n      host: 'localhost',\n      port: 5432,\n      databaseName: 'public',\n      eventsTableName: 'events',\n    }\n  },\n  ...\n}\n")),(0,l.kt)("h4",{id:"eventstore-postgresql-serverless"},"eventstore-postgresql-serverless"),(0,l.kt)("p",null,"Used to store events in AWS Aurora PostgreSQL Serverless."),(0,l.kt)("p",null,"This adapter supports the following options:"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Option Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"awsSecretStoreArn"),(0,l.kt)("td",{parentName:"tr",align:null},"An AWS secret store's Amazon Resource Name (ARN)")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"databaseName"),(0,l.kt)("td",{parentName:"tr",align:null},"The name of a database.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"dbClusterOrInstanceArn"),(0,l.kt)("td",{parentName:"tr",align:null},"An Amazon Resource Name (ARN) of a database cluster or instance.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"eventsTableName"),(0,l.kt)("td",{parentName:"tr",align:null},"The name of a database table used to store events.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"region"),(0,l.kt)("td",{parentName:"tr",align:null},"An AWS region.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"secretsTableName"),(0,l.kt)("td",{parentName:"tr",align:null},"The name of a database table used to store secrets.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"snapshotBucketSize"),(0,l.kt)("td",{parentName:"tr",align:null},"The number of events between aggregate snapshots.")))),(0,l.kt)("h5",{id:"example-5"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"const prodConfig = {\n  eventstoreAdapter: {\n    module: '@resolve-js/eventstore-postgresql-serverless',\n    options: {\n      region: 'us-east-1',\n      databaseName: 'databaseName',\n      eventsTableName: 'eventsTableName',\n      awsSecretStoreArn: 'awsSecretStoreArn',\n      dbClusterOrInstanceArn: 'dbClusterOrInstanceArn',\n    }\n  },\n  ...\n}\n")),(0,l.kt)("h3",{id:"host"},"host"),(0,l.kt)("p",null,"Specifies the network host on which to listen for connections. Defaults to ",(0,l.kt)("inlineCode",{parentName:"p"},"'0.0.0.0'"),"."),(0,l.kt)("h3",{id:"middleware"},"middleware"),(0,l.kt)("p",null,"Specifies ",(0,l.kt)("a",{parentName:"p",href:"/resolve/docs/middleware"},"middleware")," for aggregates and read models. The configuration object can contain the following fields:"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Field"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"aggregate"),(0,l.kt)("td",{parentName:"tr",align:null},"An array of file paths. Each value in the array specifies a file that exports a middleware function.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"readModel"),(0,l.kt)("td",{parentName:"tr",align:null},"An object that contains read model middleware settings (see below).")))),(0,l.kt)("p",null,"The ",(0,l.kt)("strong",{parentName:"p"},"readModel")," object can have the following fields:"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Field"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"projection"),(0,l.kt)("td",{parentName:"tr",align:null},"Lists files that contain read model projection middleware.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"resolver"),(0,l.kt)("td",{parentName:"tr",align:null},"Lists files that contain read model resolver middleware.")))),(0,l.kt)("p",null,"Middlewares of all types are invoked in the order that they are listed in the configuration object."),(0,l.kt)("h4",{id:"example-6"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"const appConfig = {\n  ...\n  middlewares: {\n    aggregate: [\n      'common/middlewares/command-middleware-1.js',\n      'common/middlewares/command-middleware-2.js',\n      'common/middlewares/command-middleware-3.js'\n    ],\n    readModel: {\n        projection: ['common/middlewares/projection-middleware.js'],\n        resolver: ['common/middlewares/resolver-middleware.js']\n    }\n  },\n  ...\n}\n")),(0,l.kt)("h3",{id:"jwtcookie"},"jwtCookie"),(0,l.kt)("p",null,"Specifies global settings for the application's JWT cookies. The configuration object contains the following fields:"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Field"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"name"),(0,l.kt)("td",{parentName:"tr",align:null},"The cookie's name.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"maxAge"),(0,l.kt)("td",{parentName:"tr",align:null},"The value of the cookie's ",(0,l.kt)("inlineCode",{parentName:"td"},"max-age")," attribute.")))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"jwtCookie: {\n  name: 'jwt',\n  maxAge: 31536000000\n}\n")),(0,l.kt)("h3",{id:"mode"},"mode"),(0,l.kt)("p",null,"Specifies webpacks's ",(0,l.kt)("inlineCode",{parentName:"p"},"mode")," configuration."),(0,l.kt)("p",null,"Supported values:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"development")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"production")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"none"))),(0,l.kt)("h3",{id:"name"},"name"),(0,l.kt)("p",null,"Specifies the application's name."),(0,l.kt)("p",null,"If this option is omitted, the package name defined in the package.json file is reused as the application's name."),(0,l.kt)("h3",{id:"port"},"port"),(0,l.kt)("p",null,"Specifies the server application's port as an integer or string."),(0,l.kt)("h3",{id:"readmodels"},"readModels"),(0,l.kt)("p",null,"An array of the application's Read Models. A Read Model configuration object within this array contains the following fields:"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Field"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"name"),(0,l.kt)("td",{parentName:"tr",align:null},"The Read Model's name.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"projection"),(0,l.kt)("td",{parentName:"tr",align:null},"A path to a file that defines a Read Model projection.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"resolvers"),(0,l.kt)("td",{parentName:"tr",align:null},"A path to a file that defines a Read Model resolver.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"connectorName"),(0,l.kt)("td",{parentName:"tr",align:null},"The name of a connector used to connect the Read Model to its store.")))),(0,l.kt)("h5",{id:"example-7"},"Example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"readModels: [\n  {\n    name: 'ShoppingLists',\n    projection: 'common/read-models/shopping_lists.projection.js',\n    resolvers: 'common/read-models/shopping_lists.resolvers.js',\n    connectorName: 'default',\n  },\n]\n")),(0,l.kt)("h3",{id:"readmodelconnectors"},"readModelConnectors"),(0,l.kt)("p",null,"Specifies the application's Read Model connectors as key-value pairs. A connector configuration object contains the following fields:"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Field"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"module"),(0,l.kt)("td",{parentName:"tr",align:null},"The name of a module or the path to a file that defines a connector.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"options"),(0,l.kt)("td",{parentName:"tr",align:null},"An object that defines the connector's options as key-value pairs.")))),(0,l.kt)("h5",{id:"example-8"},"Example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"readModelConnectors: {\n  default: {\n    module: 'readmodel-mysql',\n    options: {\n      host: 'localhost',\n      port: 3306,\n      user: 'root',\n      password: '',\n      database: 'ReadModelStoriesSample'\n    }\n  }\n}\n")),(0,l.kt)("p",null,"The following connectors are available:"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Module Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"#readmodel-lite"},"@resolve-js/readmodel-lite")),(0,l.kt)("td",{parentName:"tr",align:null},"Used to store Read Model data in an SQLite database.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"#readmodel-mysql"},"@resolve-js/readmodel-mysql")),(0,l.kt)("td",{parentName:"tr",align:null},"Used to store Read Model data in a MySQL database.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"#readmodel-postgresql"},"@resolve-js/readmodel-postgresql")),(0,l.kt)("td",{parentName:"tr",align:null},"Used to store Read Model data in a PostgreSQL database.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"#readmodel-postgresql-serverless"},"@resolve-js/readmodel-postgresql-serverless")),(0,l.kt)("td",{parentName:"tr",align:null},"Used to store Read Model data in Amazon Aurora PostgreSQL Serverless.")))),(0,l.kt)("h4",{id:"readmodel-lite"},"readmodel-lite"),(0,l.kt)("p",null,"Used to store Read Model data in an SQLite database."),(0,l.kt)("p",null,"This connector supports the following option:"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Option Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"databaseFile"),(0,l.kt)("td",{parentName:"tr",align:null},"Specifies the path to a database file used to store Read Model data. If set to ",(0,l.kt)("inlineCode",{parentName:"td"},"':memory:'"),", all data is stored in memory and is lost when the application is shut down or restarted.")))),(0,l.kt)("h5",{id:"example-9"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"const prodConfig = {\n  readModelConnectors: {\n    default: {\n      module: '@resolve-js/readmodel-lite',\n      options: {\n        databaseFile: 'data/read-models.db'\n        // databaseFile: ':memory:'\n      },\n    },\n  },\n  ...\n}\n")),(0,l.kt)("h4",{id:"readmodel-mysql"},"readmodel-mysql"),(0,l.kt)("p",null,"Used to store Read Model data in a MySQL database."),(0,l.kt)("p",null,"To configure the database connection for this adapter, specify ",(0,l.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/mysql2#first-query"},"MySQL connection setting")," as the adapter's options."),(0,l.kt)("h5",{id:"example-10"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"const prodConfig = {\n  readModelConnectors: {\n    default: {\n      module: '@resolve-js/readmodel-mysql',\n      options: {\n        host: 'localhost',\n        port: 3306,\n        user: 'customUser',\n        password: 'customPassword',\n        database: 'customDatabaseName'\n      }\n    }\n  },\n  ...\n}\n")),(0,l.kt)("h4",{id:"readmodel-postgresql"},"readmodel-postgresql"),(0,l.kt)("p",null,"Used to store Read Model data in a PostgreSQL database."),(0,l.kt)("p",null,"This connector supports the following options:"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Option Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"database"),(0,l.kt)("td",{parentName:"tr",align:null},"The name of a database.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"databaseName"),(0,l.kt)("td",{parentName:"tr",align:null},"The name of a PostgreSQL database schema.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"host"),(0,l.kt)("td",{parentName:"tr",align:null},"The database server host name.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"password"),(0,l.kt)("td",{parentName:"tr",align:null},"The user's password.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"port"),(0,l.kt)("td",{parentName:"tr",align:null},"The database server port number.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"tablePrefix"),(0,l.kt)("td",{parentName:"tr",align:null},"Optional table name prefix.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"user"),(0,l.kt)("td",{parentName:"tr",align:null},"The user name used to log in to the database server.")))),(0,l.kt)("h5",{id:"example-11"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"const prodConfig = {\n  readModelConnectors: {\n    default: {\n      module: '@resolve-js/readmodel-postgresql',\n      options: {\n        user: 'user',\n        password: 'password',\n        database: 'postgres',\n        host: 'localhost',\n        port: 5432,\n        databaseName: 'public',\n      }\n    }\n  },\n  ...\n}\n")),(0,l.kt)("h4",{id:"readmodel-postgresql-serverless"},"readmodel-postgresql-serverless"),(0,l.kt)("p",null,"Used to store Read Model data in AWS Aurora PostgreSQL Serverless."),(0,l.kt)("p",null,"This connector supports the following options:"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Option Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"awsSecretStoreArn"),(0,l.kt)("td",{parentName:"tr",align:null},"An AWS secret store's Amazon Resource Name (ARN).")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"databaseName"),(0,l.kt)("td",{parentName:"tr",align:null},"The name of a database.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"dbClusterOrInstanceArn"),(0,l.kt)("td",{parentName:"tr",align:null},"An Amazon Resource Name (ARN) of a database cluster or instance.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"region"),(0,l.kt)("td",{parentName:"tr",align:null},"An AWS region.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"tablePrefix"),(0,l.kt)("td",{parentName:"tr",align:null},"Optional table name prefix.")))),(0,l.kt)("h4",{id:"example-12"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"const prodConfig = {\n  readModelConnectors: {\n    default: {\n      module: '@resolve-js/readmodel-postgresql-serverless',\n      options: {\n        region: 'us-east-1',\n        databaseName: 'databaseName',\n        awsSecretStoreArn: 'awsSecretStoreArn',\n        dbClusterOrInstanceArn: 'dbClusterOrInstanceArn',\n      }\n    }\n  },\n  ...\n}\n")),(0,l.kt)("h3",{id:"sagas"},"sagas"),(0,l.kt)("p",null,"Specifies an array of the application's Sagas. A Saga configuration object within this array contains the following fields:"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Field"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"source"),(0,l.kt)("td",{parentName:"tr",align:null},"A path to a file that defines the Saga's handlers or both handlers and side effects.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"sideEffects"),(0,l.kt)("td",{parentName:"tr",align:null},"A path to a file that defines the Saga's side effects.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"connectorName"),(0,l.kt)("td",{parentName:"tr",align:null},"Defines a Read Model storage used to store the saga's persistent data.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"encryption"),(0,l.kt)("td",{parentName:"tr",align:null},"A path to a file that defines data encryption and decryption logic.")))),(0,l.kt)("h5",{id:"example-13"},"Example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"const appConfig = {\n  sagas: [\n    {\n      name: 'UserConfirmation',\n      source: 'saga.js',\n      connectorName: 'default'\n    }\n  ]\n}\n")),(0,l.kt)("h3",{id:"schedulers"},"schedulers"),(0,l.kt)("p",null,"Specifies saga schedulers as key-value pairs. A scheduler configuration object contains the following fields:"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Field"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"adapter"),(0,l.kt)("td",{parentName:"tr",align:null},"The ",(0,l.kt)("strong",{parentName:"td"},"scheduler adapter")," settings.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"connectorName"),(0,l.kt)("td",{parentName:"tr",align:null},"The name of the readModel connector used by this scheduler.")))),(0,l.kt)("p",null,"A scheduler adapter configuration object has the following fields:"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Field"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"module"),(0,l.kt)("td",{parentName:"tr",align:null},"The name of a module or the path to a file that defines an adapter.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"options"),(0,l.kt)("td",{parentName:"tr",align:null},"An object that defines the adapter's options as key-value pairs.")))),(0,l.kt)("h5",{id:"example-14"},"Example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"schedulers: {\n  scheduler: {\n    adapter: {\n      module: 'resolve-scheduler-local',\n      options: {}\n    },\n    connectorName: 'default'\n  }\n},\n")),(0,l.kt)("h3",{id:"serverimports"},"serverImports"),(0,l.kt)("p",null,"Same as ",(0,l.kt)("a",{parentName:"p",href:"#clientImports"},"clientImports")," but affects the client script invoked on the server by the Server Side Rendering (SSR) script."),(0,l.kt)("h3",{id:"staticdir"},"staticDir"),(0,l.kt)("p",null,"Specifies the project directory that contains static files."),(0,l.kt)("h3",{id:"staticpath"},"staticPath"),(0,l.kt)("p",null,"Specifies the URL path to static files."),(0,l.kt)("h3",{id:"target"},"target"),(0,l.kt)("p",null,"Specifies the environment that the application targets."),(0,l.kt)("p",null,"Supported values:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},'"local"')),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},'"cloud"'))),(0,l.kt)("h3",{id:"viewmodels"},"viewModels"),(0,l.kt)("p",null,"Specifies an array of the application's View Models. A View Model configuration object within this array contains the following fields:"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Field"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"name"),(0,l.kt)("td",{parentName:"tr",align:null},"The View Model's name.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"projection"),(0,l.kt)("td",{parentName:"tr",align:null},"A path to a file that defines a View Model projection.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"resolver"),(0,l.kt)("td",{parentName:"tr",align:null},"A path to a file that defines a ",(0,l.kt)("a",{parentName:"td",href:"/resolve/docs/read-side#view-model-resolver"},"View Model resolver"),".")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"serializeState"),(0,l.kt)("td",{parentName:"tr",align:null},"A path to a file that defines a state serializer function.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"deserializeState"),(0,l.kt)("td",{parentName:"tr",align:null},"A path to a file that defines a state deserializer function.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"encryption"),(0,l.kt)("td",{parentName:"tr",align:null},"A path to a file that defines data encryption and decryption logic.")))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"viewModels: [\n  {\n    name: 'shoppingList',\n    projection: 'common/view-models/shopping_list.projection.js',\n  },\n]\n")))}u.isMDXComponent=!0}}]);