(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[8519],{5318:(e,t,n)=>{"use strict";n.d(t,{Zo:()=>d,kt:()=>u});var a=n(7378);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},d=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),m=p(n),u=r,h=m["".concat(s,".").concat(u)]||m[u]||c[u]||o;return n?a.createElement(h,l(l({ref:t},d),{},{components:n})):a.createElement(h,l({ref:t},d))}));function u(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,l=new Array(o);l[0]=m;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:r,l[1]=i;for(var p=2;p<o;p++)l[p]=n[p];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},7625:(e,t,n)=>{"use strict";n.r(t),n.d(t,{frontMatter:()=>i,contentTitle:()=>s,metadata:()=>p,toc:()=>d,default:()=>m});var a=n(9603),r=n(120),o=(n(7378),n(5318)),l=["components"],i={id:"frontend",title:"Frontend",description:"This document describes approaches that you can use to implement a frontend for a reSolve application."},s=void 0,p={unversionedId:"frontend",id:"frontend",isDocsHomePage:!1,title:"Frontend",description:"This document describes approaches that you can use to implement a frontend for a reSolve application.",source:"@site/../docs/frontend.md",sourceDirName:".",slug:"/frontend",permalink:"/resolve/docs/frontend",version:"current",frontMatter:{id:"frontend",title:"Frontend",description:"This document describes approaches that you can use to implement a frontend for a reSolve application."},sidebar:"docs",previous:{title:"API Handlers",permalink:"/resolve/docs/api-handlers"},next:{title:"Manage a ReSolve Application",permalink:"/resolve/docs/manage-application"}},d=[{value:"Client Application Entry Point",id:"client-application-entry-point",children:[{value:"Basic Entry Point",id:"basic-entry-point",children:[]},{value:"SSR Handlers",id:"ssr-handlers",children:[]}]},{value:"HTTP API",id:"http-api",children:[]},{value:"@resolve-js/client library",id:"resolve-jsclient-library",children:[]},{value:"@resolve-js/redux library",id:"resolve-jsredux-library",children:[]},{value:"@resolve-js/react-hooks library",id:"resolve-jsreact-hooks-library",children:[]}],c={toc:d};function m(e){var t=e.components,i=(0,r.Z)(e,l);return(0,o.kt)("wrapper",(0,a.Z)({},c,i,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"This document describes approaches that you can use to implement a frontend for a reSolve application. The following approaches are available:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#http-api"},"HTTP API")," - An HTTP API exposed by a reSolve server"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#resolve-jsclient-library"},"@resolve-js/client library")," - A higher-level JavaScript library used to communicate with a reSolve server"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#resolve-jsredux-library"},"@resolve-js/redux library")," - A library used to connect a React + Redux component to reSolve"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#resolve-jsreact-hooks-library"},"@resolve-js/react-hooks library")," - A hook-based library used to connect React components to reSolve")),(0,o.kt)("h2",{id:"client-application-entry-point"},"Client Application Entry Point"),(0,o.kt)("h3",{id:"basic-entry-point"},"Basic Entry Point"),(0,o.kt)("p",null,"A client script should export a function that is the script's entry point. This function takes the reSolve context as the parameter."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"const main = async resolveContext => {\n...\n}\nexport default main\n")),(0,o.kt)("p",null,"To register the entry point, assign the path to the file that contains the entry point definition to the ",(0,o.kt)("inlineCode",{parentName:"p"},"clientEntries")," ",(0,o.kt)("a",{parentName:"p",href:"/resolve/docs/application-configuration#cliententries"},"configuration option"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"clientEntries: ['client/index.js']\n")),(0,o.kt)("p",null,"Use the ",(0,o.kt)("inlineCode",{parentName:"p"},"resolveContext")," object to initialize a client library. The code samples below demonstrate how to configure the entry point for different client libraries."),(0,o.kt)("h5",{id:"resolve-jsclient"},"@resolve-js/client:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"import { getClient } from '@resolve-js/client'\nconst main = async resolveContext => {\n  await new Promise(resolve => domready(resolve))\n  const client = getClient(resolveContext)\n  const { data } = await client.query({\n    name: 'chat',\n    aggregateIds: '*'\n  })\n  ...\n}\n")),(0,o.kt)("h5",{id:"resolve-jsredux"},"@resolve-js/redux:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"import { AppContainer, createStore, getOrigin } from '@resolve-js/redux'\n\nconst entryPoint = ({\n  clientImports,\n  rootPath,\n  staticPath,\n  viewModels,\n  subscriber,\n}) => {\n  const origin = getOrigin(window.location)\n  const history = createBrowserHistory({ basename: rootPath })\n  const routes = getRoutes(clientImports)\n  const redux = getRedux(clientImports, history)\n\n  const store = createStore({\n    serializedState: window.__INITIAL_STATE__,\n    redux,\n    viewModels,\n    subscriber,\n    history,\n    origin,\n    rootPath,\n    staticPath,\n    isClient: true,\n  })\n\n  render(\n    <AppContainer\n      origin={origin}\n      rootPath={rootPath}\n      staticPath={staticPath}\n      store={store}\n      history={history}\n    >\n      <Router history={history}>\n        <Routes routes={routes} />\n      </Router>\n    </AppContainer>,\n    document.getElementById('app-container')\n  )\n}\n")),(0,o.kt)("h5",{id:"resolve-jsreact-hooks"},"@resolve-js/react-hooks:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"import { ResolveContext } from '@resolve-js/react-hooks'\n...\nconst entryPoint = context => {\n  const appContainer = document.createElement('div')\n  document.body.appendChild(appContainer)\n  render(\n    <ResolveContext.Provider value={context}>\n      <BrowserRouter>{renderRoutes(routes)}</BrowserRouter>\n    </ResolveContext.Provider>,\n    appContainer\n  )\n}\n")),(0,o.kt)("h3",{id:"ssr-handlers"},"SSR Handlers"),(0,o.kt)("p",null,"To use Server Side Rendering (SSR) in your application, you need to implement one or several handlers that pre-render the client application's markup on the server."),(0,o.kt)("p",null,"An SSR handler is an asynchronous function that receives the ",(0,o.kt)("inlineCode",{parentName:"p"},"resolveContext")," along with a request and response objects. As the result of its execution, an SSR handler should send a response that contains the rendered markup:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"const ssrHandler = async (\n  resolveContext,\n  req,\n  res\n) => {\n  ...\n  const markupHtml =\n    `<!doctype html>`\n      `<html ${helmet.htmlAttributes.toString()}>` +\n      ...\n      '</html>'\n  await res.end(markupHtml)\n}\n")),(0,o.kt)("p",null,"To enable server side rendering, specify an array of server side rendering scripts that target different environments in the ",(0,o.kt)("inlineCode",{parentName:"p"},"clientEntries")," configuration section:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"clientEntries: [\n  'client/index.js',\n  [\n    'client/ssr.js',\n    {\n      outputFile: 'common/local-entry/ssr.js',\n      moduleType: 'commonjs',\n      target: 'node',\n    },\n  ],\n  [\n    'client/ssr.js',\n    {\n      outputFile: 'common/cloud-entry/ssr.js',\n      moduleType: 'commonjs',\n      target: 'node',\n    },\n  ],\n]\n")),(0,o.kt)("p",null,"For more information on these settings, refer to the ",(0,o.kt)("a",{parentName:"p",href:"/resolve/docs/application-configuration#cliententries"},"Application Configuration")," article."),(0,o.kt)("p",null,"To serve SSR markup to the client, you need to register the ",(0,o.kt)("strong",{parentName:"p"},"live-require-handler.js")," API handler in the ",(0,o.kt)("strong",{parentName:"p"},"apiHandlers")," configuration section:"),(0,o.kt)("h5",{id:"configappjs"},"config.app.js:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"...\napiHandlers: [\n  {\n    handler: {\n      module: '@resolve-js/runtime/lib/common/handlers/live-require-handler.js',\n      options: {\n        modulePath: './ssr.js',\n        moduleFactoryImport: false\n      }\n    },\n    path: '/:markup*',\n    method: 'GET'\n  }\n],\n...\n")),(0,o.kt)("h2",{id:"http-api"},"HTTP API"),(0,o.kt)("p",null,"A reSolve exposes HTTP API that you can use to send aggregate commands and query Read Models. The following endpoints are available."),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Purpose"),(0,o.kt)("th",{parentName:"tr",align:null},"Endpoint"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Send a command"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"http://{host}:{port}/api/commands"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Query a Read Model"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"http://{host}:{port}/api/query/{readModel}/{resolver}"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Query a View Model"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"http://{host}:{port}/api/query/{viewModel}/{aggregateIds}"))))),(0,o.kt)("h4",{id:"example"},"Example"),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"To test the provided console inputs on your machine, download and run the ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/reimagined/resolve/tree/master/examples/js/shopping-list"},"Shopping List")," example project.")),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},'Create a new shopping list named "List 1":')),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sh"},'$ curl -i http://localhost:3000/api/commands/ \\\n--header "Content-Type: application/json" \\\n--data \'\n{\n    "aggregateName": "ShoppingList",\n    "aggregateId": "12345-new-shopping-list",\n    "type": "createShoppingList",\n    "payload": {\n        "name": "List 1"\n    }\n}\n\'\n\n\nHTTP/1.1 200 OK\nX-Powered-By: Express\nContent-Type: text/html; charset=utf-8\nContent-Length: 2\nETag: W/"2-nOO9QiTIwXgNtWtBJezz8kv3SLc"\nDate: Tue, 02 Oct 2018 11:47:53 GMT\nConnection: keep-alive\n\nOK\n')),(0,o.kt)("ol",{start:2},(0,o.kt)("li",{parentName:"ol"},"Query a View Model to see the shopping list:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sh"},'$ curl -i -g -X GET "http://localhost:3000/api/query/ShoppingList/12345-new-shopping-list"\n\nHTTP/1.1 200 OK\nX-Powered-By: Express\nContent-Type: text/html; charset=utf-8\nContent-Length: 58\nETag: W/"3a-jyqRShDvCZnc9uCOPi31BlQFznA"\nDate: Tue, 02 Oct 2018 12:11:43 GMT\nConnection: keep-alive\n\n{"id":"12345-new-shopping-list","name":"List 1","list":[]}\n')),(0,o.kt)("ol",{start:3},(0,o.kt)("li",{parentName:"ol"},"Add an item to the shopping list:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sh"},'$ curl -i http://localhost:3000/api/commands/ \\\n--header "Content-Type: application/json" \\\n--data \'\n{\n    "aggregateName": "ShoppingList",\n    "aggregateId": "12345-new-shopping-list",\n    "type": "createShoppingItem",\n    "payload": {\n        "id": "1",\n        "text": "Beer"\n    }\n}\n\'\n\nHTTP/1.1 200 OK\nX-Powered-By: Express\nContent-Type: text/html; charset=utf-8\nContent-Length: 2\nETag: W/"2-nOO9QiTIwXgNtWtBJezz8kv3SLc"\nDate: Tue, 02 Oct 2018 12:13:39 GMT\nConnection: keep-alive\n\nOK\n')),(0,o.kt)("ol",{start:4},(0,o.kt)("li",{parentName:"ol"},"Add another item:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sh"},'$ curl -i http://localhost:3000/api/commands/ \\\n--header "Content-Type: application/json" \\\n--data \'\n{\n    "aggregateName": "ShoppingList",\n    "aggregateId": "12345-new-shopping-list",\n    "type": "createShoppingItem",\n    "payload": {\n        "id": "2",\n        "text": "Chips"\n    }\n}\n\'\n')),(0,o.kt)("ol",{start:5},(0,o.kt)("li",{parentName:"ol"},"You can now query the view model again and see the items you have added:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sh"},'$ curl --g -X GET "http://localhost:3000/api/query/ShoppingList/12345-new-shopping-list" \'\nHTTP/1.1 200 OK\nX-Powered-By: Express\nContent-Type: text/html; charset=utf-8\nContent-Length: 140\nETag: W/"8c-rWsIpzFOfkV3y9g6x9FlenTaG/A"\nDate: Tue, 02 Oct 2018 12:17:57 GMT\nConnection: keep-alive\n\n{"id":"12345-new-shopping-list","name":"List 1","list":[{"id":"1","text":"Beer","checked":false},{"id":"2","text":"Chips","checked":false}]}\n')),(0,o.kt)("p",null,"Below, you can see the newly created list and its items on the Shopping List application's page."),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"List1-items",src:n(4089).Z})),(0,o.kt)("p",null,"For more information on the HTTP API, refer to the following help topic: ",(0,o.kt)("a",{parentName:"p",href:"/resolve/docs/api/client/http-api"},"API Reference"),"."),(0,o.kt)("p",null,"You can extend a reSolve server's API with API Handlers. Refer to the following help topic for more information: ",(0,o.kt)("a",{parentName:"p",href:"/resolve/docs/api-handlers"},"API Handlers"),"."),(0,o.kt)("h2",{id:"resolve-jsclient-library"},"@resolve-js/client library"),(0,o.kt)("p",null,"The ",(0,o.kt)("strong",{parentName:"p"},"@resolve-js/client")," library provides an interface that you can use to communicate with the reSolve backend from JavaScript code. To initialize the client, call the library's ",(0,o.kt)("inlineCode",{parentName:"p"},"getClient")," function. This function takes a reSolve context as a parameter and returns an initialized client object. This object exposes the following functions:"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Function"),(0,o.kt)("th",{parentName:"tr",align:null},"Description"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/resolve/docs/api/client/resolve-client#command"},"command")),(0,o.kt)("td",{parentName:"tr",align:null},"Sends an aggregate command to the backend.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/resolve/docs/api/client/resolve-client#query"},"query")),(0,o.kt)("td",{parentName:"tr",align:null},"Queries a Read Model.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/resolve/docs/api/client/resolve-client#getstaticasseturl"},"getStaticAssetUrl")),(0,o.kt)("td",{parentName:"tr",align:null},"Gets a static file's full URL.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/resolve/docs/api/client/resolve-client#getoriginpath"},"getOriginPath")),(0,o.kt)("td",{parentName:"tr",align:null},"Returns an absolute URL within the application for the given relative path.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/resolve/docs/api/client/resolve-client#subscribe"},"subscribe")),(0,o.kt)("td",{parentName:"tr",align:null},"Subscribes to View Model updates.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/resolve/docs/api/client/resolve-client#unsubscribe"},"unsubscribe")),(0,o.kt)("td",{parentName:"tr",align:null},"Unsubscribes from View Model updates.")))),(0,o.kt)("h4",{id:"example-1"},"Example"),(0,o.kt)("p",null,"The ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/reimagined/resolve/tree/master/templates/js/vanilla"},"with-vanilajs")," template project demonstrates how to use the ",(0,o.kt)("strong",{parentName:"p"},"@resolve-js/client")," library to implement a frontend for a reSolve application in pure JavaScript."),(0,o.kt)("h2",{id:"resolve-jsredux-library"},"@resolve-js/redux library"),(0,o.kt)("p",null,"The reSolve framework includes the client ",(0,o.kt)("strong",{parentName:"p"},"@resolve-js/redux")," library used to connect a client React + Redux app to a reSolve-powered backend."),(0,o.kt)("p",null,"Use the following @resolve-js/redux library's hooks and Higher-Order Components (HOCs) to connect react components to the backend."),(0,o.kt)("h5",{id:"react-hooks"},"React Hooks:"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Function Name"),(0,o.kt)("th",{parentName:"tr",align:null},"Description"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/resolve/docs/api/client/resolve-redux#usereduxcommand"},"useReduxCommand")),(0,o.kt)("td",{parentName:"tr",align:null},"Creates a hook to execute a command.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/resolve/docs/api/client/resolve-redux#usereduxreadmodel"},"useReduxReadModel")),(0,o.kt)("td",{parentName:"tr",align:null},"Creates a hook to query a Read Model.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/resolve/docs/api/client/resolve-redux#usereduxreadmodelselector"},"useReduxReadModelSelector")),(0,o.kt)("td",{parentName:"tr",align:null},"Creates a hook to access a Read Model query result.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/resolve/docs/api/client/resolve-redux#usereduxviewmodel"},"useReduxViewModel")),(0,o.kt)("td",{parentName:"tr",align:null},"Creates a hook to receive a View Model's state updates and reactive events.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/resolve/docs/api/client/resolve-redux#usereduxviewmodelselector"},"useReduxViewModelSelector")),(0,o.kt)("td",{parentName:"tr",align:null},"Creates a hook to access a View Model's current state on the client.")))),(0,o.kt)("h5",{id:"higher-order-components"},"Higher-Order Components:"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Function Name"),(0,o.kt)("th",{parentName:"tr",align:null},"Description"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/resolve/docs/api/client/resolve-redux#connectviewmodel"},"connectViewModel")),(0,o.kt)("td",{parentName:"tr",align:null},"Connects a React component to a reSolve View Model.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/resolve/docs/api/client/resolve-redux#connectreadmodel"},"connectReadModel")),(0,o.kt)("td",{parentName:"tr",align:null},"Connects a React component to a reSolve Read Model.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/resolve/docs/api/client/resolve-redux#connectrootbasedurls"},"connectRootBasedUrls")),(0,o.kt)("td",{parentName:"tr",align:null},"Fixes URLs passed to the specified props so that they use the correct root folder path.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/resolve/docs/api/client/resolve-redux#connectstaticbasedurls"},"connectStaticBasedUrls")),(0,o.kt)("td",{parentName:"tr",align:null},"Fixes URLs passed to the specified props so that they use the correct static resource folder path.")))),(0,o.kt)("h4",{id:"example-2"},"Example"),(0,o.kt)("p",null,"The ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/reimagined/resolve/tree/master/examples/js/shopping-list-redux-hoc"},"shopping-list-redux-hoc")," example application demonstrates how to use the ",(0,o.kt)("strong",{parentName:"p"},"@resolve-js/redux")," library to implement a react-redux frontend for a reSolve application."),(0,o.kt)("h2",{id:"resolve-jsreact-hooks-library"},"@resolve-js/react-hooks library"),(0,o.kt)("p",null,"The ",(0,o.kt)("strong",{parentName:"p"},"@resolve-js/react-hooks")," library provides React hooks that you can use to connect React components to a reSolve backend. The following hooks are provided."),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Hook"),(0,o.kt)("th",{parentName:"tr",align:null},"Description"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/resolve/docs/api/client/resolve-react-hooks#usecommand"},"useCommand")),(0,o.kt)("td",{parentName:"tr",align:null},"Initializes a command that can be passed to the backend")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/resolve/docs/api/client/resolve-react-hooks#usecommandbuilder"},"useCommandBuilder")),(0,o.kt)("td",{parentName:"tr",align:null},"Allows to generate commands based on input parameters")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/resolve/docs/api/client/resolve-react-hooks#useviewmodel"},"useViewModel")),(0,o.kt)("td",{parentName:"tr",align:null},"Establishes a WebSocket connection to a reSolve View Model")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/resolve/docs/api/client/resolve-react-hooks#usequery"},"useQuery")),(0,o.kt)("td",{parentName:"tr",align:null},"Allows a component to send queries to a reSolve Read Model or View Model")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/resolve/docs/api/client/resolve-react-hooks#useoriginresolver"},"useOriginResolver")),(0,o.kt)("td",{parentName:"tr",align:null},"Resolves a relative path to an absolute URL within the application.")))),(0,o.kt)("h4",{id:"example-3"},"Example"),(0,o.kt)("p",null,"The ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/reimagined/resolve/tree/master/examples/js/shopping-list"},"shopping-list-with-hooks")," example application demonstrates how to use the ",(0,o.kt)("strong",{parentName:"p"},"@resolve-js/react-hooks")," library to communicate with a reSolve backend."))}m.isMDXComponent=!0},4089:(e,t,n)=>{"use strict";n.d(t,{Z:()=>a});const a=n.p+"assets/images/list1-items-ddf5e3ac9db86c3167203f9deac2dfb9.png"}}]);