"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[5529],{5318:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>d});var n=r(7378);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=n.createContext({}),p=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},c=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),m=p(r),d=a,f=m["".concat(s,".").concat(d)]||m[d]||u[d]||o;return r?n.createElement(f,i(i({ref:t},c),{},{components:r})):n.createElement(f,i({ref:t},c))}));function d(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var p=2;p<o;p++)i[p]=r[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},679:(e,t,r)=>{r.r(t),r.d(t,{frontMatter:()=>l,contentTitle:()=>s,metadata:()=>p,toc:()=>c,default:()=>m});var n=r(2685),a=r(1244),o=(r(7378),r(5318)),i=["components"],l={id:"faq",title:"FAQ",description:"This article provides answers to frequently asked questions about the reSolve framework."},s=void 0,p={unversionedId:"faq",id:"faq",isDocsHomePage:!1,title:"FAQ",description:"This article provides answers to frequently asked questions about the reSolve framework.",source:"@site/../docs/faq.md",sourceDirName:".",slug:"/faq",permalink:"/resolve/docs/faq",tags:[],version:"current",frontMatter:{id:"faq",title:"FAQ",description:"This article provides answers to frequently asked questions about the reSolve framework."},sidebar:"docs",previous:{title:"Configuration",permalink:"/resolve/docs/application-configuration"},next:{title:"Troubleshooting",permalink:"/resolve/docs/troubleshooting"}},c=[],u={toc:c};function m(e){var t=e.components,r=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Q"),": Where can I find information about CQRS and Event Sourcing?",(0,o.kt)("br",null),"\n",(0,o.kt)("strong",{parentName:"p"},"A"),": Refer to the following resources:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://martinfowler.com/eaaDev/EventSourcing.html"},"Martin Fowler's Enterprise Architecture pattern")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://www.youtube.com/watch?v=8JKjvY4etTY"},"Greg Young classic explanation talk")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://eventstore.org/docs/event-sourcing-basics/index.html"},"Greg Young's EventStore docs: Event Sourcing Basics")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://www.youtube.com/watch?v=whCk1Q87_ZI"},"Greg Young's DDD CQRS Class")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://kickstarter.engineering/event-sourcing-made-simple-4a2625113224"},"Event Sourcing Made Simple")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://hackernoon.com/migrating-to-microservices-and-event-sourcing-the-dos-and-donts-195153c7487d"},"Migrating to Microservices and Event-Sourcing: the Dos and Dont\u2019s")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"http://www.cqrs.nu"},"CQRS.nu")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://barryosull.com/blog/event-sourcing-what-it-is-and-why-it-s-awesome"},"Event Sourcing: What it is and why it's awesome")," and other related posts at ",(0,o.kt)("a",{parentName:"li",href:"https://barryosull.com/blog"},"https://barryosull.com/blog"))),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Q"),": What is the difference between a Read Model and a View Model?",(0,o.kt)("br",null),"\n",(0,o.kt)("strong",{parentName:"p"},"A"),": Read Models implement the standard event sourcing mechanisms.\nView Models are a Redux-specific extension to these mechanisms. View models are reactive and use websockets to synchronize their state with the redux state on the client."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Q"),": How to implement a Read Model with direct access to the underlying store?",(0,o.kt)("br",null),"\n",(0,o.kt)("strong",{parentName:"p"},"A"),": Implement a ",(0,o.kt)("a",{parentName:"p",href:"/resolve/docs/read-side#custom-read-models"},"custom Read Model"),". Custom Read Models allow you to use custom logic to communicate with a Read Model store."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Q"),": How to send an aggregate command?",(0,o.kt)("br",null),"\n",(0,o.kt)("strong",{parentName:"p"},"A"),": To send a command from a client browser, use the ",(0,o.kt)("a",{parentName:"p",href:"/resolve/docs/frontend#http-api"},"standard HTTP API"),": ",(0,o.kt)("br",null)),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'$ curl -X POST "http://localhost:3000/api/commands"\n--header "Content-Type: application/json" \\\n--data \'\n{\n  "aggregateName":"Todo",\n  "type":"createItem",\n  "aggregateId":"root-id",\n  "payload": {\n    "id":`date +%s`,\n    "text":"Learn reSolve API"\n  }\n}\n')),(0,o.kt)("p",null,"On the server side, you can ",(0,o.kt)("a",{parentName:"p",href:"/resolve/docs/api/saga#executecommand"},"send a command")," from an API Handler or Saga:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"await sideEffects.executeCommand({\n  aggregateName: 'User',\n  aggregateId: event.aggregateId,\n  type: 'requestConfirmUser',\n  payload: event.payload\n})\n")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Q"),": How to perform validation to ensure input values are unique?",(0,o.kt)("br",null),"\n",(0,o.kt)("strong",{parentName:"p"},"A"),": In a distributed application, it is not possible to perform reliable checks. You should detect value duplicates in a Read Model or Saga projection code and mark duplicated values as incorrect."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Q"),": How to implement a frontend?",(0,o.kt)("br",null),"\n",(0,o.kt)("strong",{parentName:"p"},"A"),": There are three main approaches to frontend development in reSolve:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Use one of the available client libraries. Refer to the ",(0,o.kt)("a",{parentName:"li",href:"/resolve/docs/frontend"},"Frontend")," article for more information."),(0,o.kt)("li",{parentName:"ul"},"Use the ",(0,o.kt)("a",{parentName:"li",href:"/resolve/docs/frontend#http-api"},"HTTP API")," exposed by a reSolve application."),(0,o.kt)("li",{parentName:"ul"},"Write your own wrappers for the reSolve HTTP API.")))}m.isMDXComponent=!0}}]);