/*! For license information please see 80d76d22.c2eb644b.js.LICENSE.txt */
(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[2175],{2525:e=>{"use strict";var t=Object.getOwnPropertySymbols,n=Object.prototype.hasOwnProperty,a=Object.prototype.propertyIsEnumerable;function r(e){if(null==e)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(e)}e.exports=function(){try{if(!Object.assign)return!1;var e=new String("abc");if(e[5]="de","5"===Object.getOwnPropertyNames(e)[0])return!1;for(var t={},n=0;n<10;n++)t["_"+String.fromCharCode(n)]=n;if("0123456789"!==Object.getOwnPropertyNames(t).map((function(e){return t[e]})).join(""))return!1;var a={};return"abcdefghijklmnopqrst".split("").forEach((function(e){a[e]=e})),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},a)).join("")}catch(r){return!1}}()?Object.assign:function(e,o){for(var i,l,s=r(e),c=1;c<arguments.length;c++){for(var p in i=Object(arguments[c]))n.call(i,p)&&(s[p]=i[p]);if(t){l=t(i);for(var d=0;d<l.length;d++)a.call(i,l[d])&&(s[l[d]]=i[l[d]])}}return s}},1535:(e,t,n)=>{"use strict";var a=n(2525),r="function"==typeof Symbol&&Symbol.for,o=r?Symbol.for("react.element"):60103,i=r?Symbol.for("react.portal"):60106,l=r?Symbol.for("react.fragment"):60107,s=r?Symbol.for("react.strict_mode"):60108,c=r?Symbol.for("react.profiler"):60114,p=r?Symbol.for("react.provider"):60109,d=r?Symbol.for("react.context"):60110,u=r?Symbol.for("react.forward_ref"):60112,g=r?Symbol.for("react.suspense"):60113,m=r?Symbol.for("react.memo"):60115,f=r?Symbol.for("react.lazy"):60116,h="function"==typeof Symbol&&Symbol.iterator;function y(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,n=1;n<arguments.length;n++)t+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var k={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},v={};function b(e,t,n){this.props=e,this.context=t,this.refs=v,this.updater=n||k}function N(){}function j(e,t,n){this.props=e,this.context=t,this.refs=v,this.updater=n||k}b.prototype.isReactComponent={},b.prototype.setState=function(e,t){if("object"!=typeof e&&"function"!=typeof e&&null!=e)throw Error(y(85));this.updater.enqueueSetState(this,e,t,"setState")},b.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},N.prototype=b.prototype;var w=j.prototype=new N;w.constructor=j,a(w,b.prototype),w.isPureReactComponent=!0;var S={current:null},O=Object.prototype.hasOwnProperty,x={key:!0,ref:!0,__self:!0,__source:!0};function A(e,t,n){var a,r={},i=null,l=null;if(null!=t)for(a in void 0!==t.ref&&(l=t.ref),void 0!==t.key&&(i=""+t.key),t)O.call(t,a)&&!x.hasOwnProperty(a)&&(r[a]=t[a]);var s=arguments.length-2;if(1===s)r.children=n;else if(1<s){for(var c=Array(s),p=0;p<s;p++)c[p]=arguments[p+2];r.children=c}if(e&&e.defaultProps)for(a in s=e.defaultProps)void 0===r[a]&&(r[a]=s[a]);return{$$typeof:o,type:e,key:i,ref:l,props:r,_owner:S.current}}function P(e){return"object"==typeof e&&null!==e&&e.$$typeof===o}var C=/\/+/g,T=[];function I(e,t,n,a){if(T.length){var r=T.pop();return r.result=e,r.keyPrefix=t,r.func=n,r.context=a,r.count=0,r}return{result:e,keyPrefix:t,func:n,context:a,count:0}}function D(e){e.result=null,e.keyPrefix=null,e.func=null,e.context=null,e.count=0,10>T.length&&T.push(e)}function E(e,t,n,a){var r=typeof e;"undefined"!==r&&"boolean"!==r||(e=null);var l=!1;if(null===e)l=!0;else switch(r){case"string":case"number":l=!0;break;case"object":switch(e.$$typeof){case o:case i:l=!0}}if(l)return n(a,e,""===t?"."+_(e,0):t),1;if(l=0,t=""===t?".":t+":",Array.isArray(e))for(var s=0;s<e.length;s++){var c=t+_(r=e[s],s);l+=E(r,c,n,a)}else if(null===e||"object"!=typeof e?c=null:c="function"==typeof(c=h&&e[h]||e["@@iterator"])?c:null,"function"==typeof c)for(e=c.call(e),s=0;!(r=e.next()).done;)l+=E(r=r.value,c=t+_(r,s++),n,a);else if("object"===r)throw n=""+e,Error(y(31,"[object Object]"===n?"object with keys {"+Object.keys(e).join(", ")+"}":n,""));return l}function q(e,t,n){return null==e?0:E(e,"",t,n)}function _(e,t){return"object"==typeof e&&null!==e&&null!=e.key?function(e){var t={"=":"=0",":":"=2"};return"$"+(""+e).replace(/[=:]/g,(function(e){return t[e]}))}(e.key):t.toString(36)}function U(e,t){e.func.call(e.context,t,e.count++)}function $(e,t,n){var a=e.result,r=e.keyPrefix;e=e.func.call(e.context,t,e.count++),Array.isArray(e)?F(e,a,n,(function(e){return e})):null!=e&&(P(e)&&(e=function(e,t){return{$$typeof:o,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}}(e,r+(!e.key||t&&t.key===e.key?"":(""+e.key).replace(C,"$&/")+"/")+n)),a.push(e))}function F(e,t,n,a,r){var o="";null!=n&&(o=(""+n).replace(C,"$&/")+"/"),q(e,$,t=I(t,o,a,r)),D(t)}var R={current:null};function L(){var e=R.current;if(null===e)throw Error(y(321));return e}},7378:(e,t,n)=>{"use strict";n(1535)},3905:(e,t,n)=>{"use strict";n.d(t,{Zo:()=>p,kt:()=>g});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),c=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=c(e.components);return a.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=c(n),g=r,m=u["".concat(s,".").concat(g)]||u[g]||d[g]||o;return n?a.createElement(m,i(i({ref:t},p),{},{components:n})):a.createElement(m,i({ref:t},p))}));function g(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=u;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var c=2;c<o;c++)i[c]=n[c];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},16:(e,t,n)=>{"use strict";n.r(t),n.d(t,{frontMatter:()=>i,contentTitle:()=>l,metadata:()=>s,toc:()=>c,default:()=>d});var a=n(2122),r=n(9756),o=(n(7378),n(3905)),i={id:"write-side",title:"Write Side",description:"An application's write side handles commands, validates input data, and emits events based on valid commands."},l=void 0,s={unversionedId:"write-side",id:"write-side",isDocsHomePage:!1,title:"Write Side",description:"An application's write side handles commands, validates input data, and emits events based on valid commands.",source:"@site/../docs/write-side.md",sourceDirName:".",slug:"/write-side",permalink:"/resolve/docs/write-side",version:"current",frontMatter:{id:"write-side",title:"Write Side",description:"An application's write side handles commands, validates input data, and emits events based on valid commands."},sidebar:"docs",previous:{title:"Step-by-Step Tutorial",permalink:"/resolve/docs/tutorial"},next:{title:"Read Side",permalink:"/resolve/docs/read-side"}},c=[{value:"Aggregates",id:"aggregates",children:[]},{value:"Aggregate ID",id:"aggregate-id",children:[]},{value:"Configuring Aggregates",id:"configuring-aggregates",children:[]},{value:"Sending a Command",id:"sending-a-command",children:[{value:"Sending Commands From the Client",id:"sending-commands-from-the-client",children:[]},{value:"Emitting Commands on the Server",id:"emitting-commands-on-the-server",children:[]}]},{value:"Aggregate Command Handlers",id:"aggregate-command-handlers",children:[]},{value:"Aggregate Projection Function",id:"aggregate-projection-function",children:[]},{value:"Event Store",id:"event-store",children:[]}],p={toc:c};function d(e){var t=e.components,n=(0,r.Z)(e,["components"]);return(0,o.kt)("wrapper",(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"aggregates"},"Aggregates"),(0,o.kt)("p",null,"Commands are executed by objects that encapsulate domain logic. These objects are called Domain Objects.\nDomain Objects are grouped into Aggregates. In a CQRS/ES app, an aggregate is a transaction boundary. This means that any given aggregate should be able to execute its commands without communicating with other aggregates."),(0,o.kt)("p",null,"Since the write side is used only to perform commands, your aggregate can be compact, and only keep state required for command execution."),(0,o.kt)("p",null,"See Martin Fowler's definition for aggregates in the DDD paradigm: ",(0,o.kt)("a",{parentName:"p",href:"https://martinfowler.com/bliki/DDD_Aggregate.html"},"https://martinfowler.com/bliki/DDD_Aggregate.html")),(0,o.kt)("p",null,"In reSolve, an aggregate is a static object that contains a set of functions of the following two kinds:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#aggregate-projection-function"},"Projections")," - build aggregate state base from events."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#aggregate-command-handlers"},"Command Handlers")," - execute commands.")),(0,o.kt)("p",null,"Aggregate state is explicitly passed to all of these functions as an argument."),(0,o.kt)("h2",{id:"aggregate-id"},"Aggregate ID"),(0,o.kt)("p",null,"Each aggregate instance should have a unique immutable ID. You should generate an aggregate ID on the client and send it to reSolve with a command that creates a new aggregate:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"import { useCommand } from '@resolve-js/react-hooks'\n...\nconst createShoppingListCommand = useCommand(\n  {\n    type: 'createShoppingList',\n    aggregateId: uuid(),\n    aggregateName: 'ShoppingList',\n    payload: {\n      name: shoppingListName\n    },\n  },\n  (err, result) => {\n    ...\n  }\n)\n")),(0,o.kt)("p",null,"An Aggregate ID should stay unique across all aggregates in the given event store. You can use ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/kelektiv/node-uuid#version-4"},"UUID v4")," or ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/ericelliott/cuid"},"cuid")," to generate aggregate IDs for scalable applications."),(0,o.kt)("h2",{id:"configuring-aggregates"},"Configuring Aggregates"),(0,o.kt)("p",null,"To configure aggregates in a reSolve app, provide an aggregates array in the application configuration file:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"aggregates: [\n    {\n      name: 'ShoppingList',\n      commands: 'common/aggregates/shopping_list.commands.js',\n      projection: 'common/aggregates/shopping_list.projection.js'\n    }\n  ]\n")),(0,o.kt)("h2",{id:"sending-a-command"},"Sending a Command"),(0,o.kt)("p",null,"You can emit aggregate commands in the following cases:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#sending-commands-from-the-client"},"Sending commands from the client")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#emitting-commands-on-the-server"},"Emitting commands on the server"))),(0,o.kt)("h3",{id:"sending-commands-from-the-client"},"Sending Commands From the Client"),(0,o.kt)("p",null,"The reSolve framework exposes an ",(0,o.kt)("a",{parentName:"p",href:"/resolve/docs/api/client/http-api"},"HTTP API")," that you can use to to send commands from the client side. Your application's frontend can use this API directly or through one of the available ",(0,o.kt)("a",{parentName:"p",href:"/resolve/docs/frontend"},"client libraries"),"."),(0,o.kt)("p",null,"You can send a command from the client side as a POST request to the following URL:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"http://{host}:{port}/api/commands\n")),(0,o.kt)("p",null,"The request body should have the ",(0,o.kt)("inlineCode",{parentName:"p"},"application/json")," content type and contain a JSON representation of the command:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'{\n  "aggregateName": aggregateName,\n  "type": commandType,\n  "aggregateId": aggregateID,\n  "payload": {\n    "param1": value1,\n    "param2": value2,\n    ...\n    "paramN": valueN\n  }\n}\n')),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Name"),(0,o.kt)("th",{parentName:"tr",align:null},"Type"),(0,o.kt)("th",{parentName:"tr",align:null},"Description"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("strong",{parentName:"td"},"aggregateId")),(0,o.kt)("td",{parentName:"tr",align:null},"string"),(0,o.kt)("td",{parentName:"tr",align:null},"The ID of an aggregate that should handle the command")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("strong",{parentName:"td"},"aggregateName")),(0,o.kt)("td",{parentName:"tr",align:null},"string"),(0,o.kt)("td",{parentName:"tr",align:null},"The aggregate's name as defined in ",(0,o.kt)("strong",{parentName:"td"},"config.app.js"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("strong",{parentName:"td"},"commandType")),(0,o.kt)("td",{parentName:"tr",align:null},"string"),(0,o.kt)("td",{parentName:"tr",align:null},"The command type that the aggregate can handle")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("strong",{parentName:"td"},"payload")),(0,o.kt)("td",{parentName:"tr",align:null},"object"),(0,o.kt)("td",{parentName:"tr",align:null},"The parameters that the command accepts")))),(0,o.kt)("h5",{id:"example"},"Example"),(0,o.kt)("p",null,"Use the following command to add an item to the ",(0,o.kt)("strong",{parentName:"p"},"shopping-list")," example:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sh"},'$ curl -X POST "http://localhost:3000/api/commands"\n--header "Content-Type: application/json" \\\n--data \'\n{\n  "aggregateName":"Todo",\n  "type":"createItem",\n  "aggregateId":"root-id",\n  "payload": {\n    "id":`date +%s`,\n    "text":"Learn reSolve API"\n  }\n}\n\'\n')),(0,o.kt)("h3",{id:"emitting-commands-on-the-server"},"Emitting Commands on the Server"),(0,o.kt)("p",null,"You can use the ",(0,o.kt)("strong",{parentName:"p"},"resolve.executeCommand")," function to emit a command on the server side from a ",(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("a",{parentName:"strong",href:"/resolve/docs/advanced-techniques#process-managers-sagas"},"Saga"))," or ",(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("a",{parentName:"strong",href:"/resolve/docs/api-handlers"},"API Handler")),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"await resolve.executeCommand({\n  type: userWithSameEmail ? 'rejectUserCreation' : 'confirmUserCreation',\n  aggregateName: 'user',\n  payload: { createdUser },\n  aggregateId,\n})\n")),(0,o.kt)("h2",{id:"aggregate-command-handlers"},"Aggregate Command Handlers"),(0,o.kt)("p",null,"Aggregate command handlers are grouped into a static object. A command handler receives a command and a state object built by the aggregate ",(0,o.kt)("a",{parentName:"p",href:"#aggregate-projection-function"},"Projection"),". The command handler should return an event object that is then saved to the ",(0,o.kt)("a",{parentName:"p",href:"#event-store"},"event store"),". A returned object should specify an event type and a ",(0,o.kt)("strong",{parentName:"p"},"payload")," specific to this event type. Here you can also add arbitrary validation logic that throws an error if the validation fails."),(0,o.kt)("p",null,"A typical ",(0,o.kt)("strong",{parentName:"p"},"Commands")," object structure:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"export default {\n  // A command handler\n  createStory: (state, command) => {\n    const { title, link, text } = command.payload\n    // The validation logic\n    if (!text) {\n      throw new Error('The \"text\" field is required')\n    }\n    // The resulting event object\n    return {\n      type: 'StoryCreated',\n      payload: { title, text, link, userId, userName },\n    }\n  },\n  // ...\n}\n")),(0,o.kt)("h2",{id:"aggregate-projection-function"},"Aggregate Projection Function"),(0,o.kt)("p",null,"Projection functions are used to calculate an aggregate state based on the aggregate's events. A projection function receives the previous state and an event to be applied. It should return a new state based on the input."),(0,o.kt)("p",null,"Projection functions run for all events with the current aggregate ID. The resulting state is then passed to the corresponding ",(0,o.kt)("a",{parentName:"p",href:"#aggregate-command-handlers"},"command handler"),"."),(0,o.kt)("p",null,"In addition to projection functions, a projection object should define an ",(0,o.kt)("strong",{parentName:"p"},"Init")," function. This function returns the initial state of the aggregate."),(0,o.kt)("p",null,"A typical projection object structure is shown below:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"export default {\n  Init: () => ({}),\n  StoryCreated: (state, { timestamp, payload: { userId } }) => ({\n    ...state,\n    createdAt: timestamp,\n    createdBy: userId,\n    voted: [],\n    comments: {}\n  })\n  ...\n}\n")),(0,o.kt)("h2",{id:"event-store"},"Event Store"),(0,o.kt)("p",null,"All events returned by command handlers are saved to the event store. The reSolve framework uses one of the supported storage adapters to write events to the storage."),(0,o.kt)("p",null,"You can specify the storage adapter in the ",(0,o.kt)("strong",{parentName:"p"},"storageAdapter")," config section:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"storageAdapter: {\n  module: '@resolve-js/eventstore-lite',\n  options: {\n    databaseFile: '../data/event-store.db'\n  }\n}\n")),(0,o.kt)("p",null,"Adapters for the following storage types are available out of the box:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/reimagined/resolve/tree/master/packages/adapters/storage-adapters/@resolve-js/eventstore-lite"},"File or memory")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/reimagined/resolve/tree/master/packages/adapters/storage-adapters/@resolve-js/eventstore-mysql"},"MySQL"))),(0,o.kt)("p",null,"You can also add your own storage adapter to store events.\nRefer to the ",(0,o.kt)("a",{parentName:"p",href:"/resolve/docs/advanced-techniques#adapters"},"Adapters")," section of the reSolve documentation for more information about adapters."))}d.isMDXComponent=!0}}]);